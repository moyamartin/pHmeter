
pHmeter_code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000978  000009ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000978  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000009fe  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a30  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  00000a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001a88  00000000  00000000  00000b48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008d3  00000000  00000000  000025d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009c9  00000000  00000000  00002ea3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000264  00000000  00000000  0000386c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000054c  00000000  00000000  00003ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ece  00000000  00000000  0000401c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  00004eea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e7       	ldi	r30, 0x78	; 120
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 b3 02 	call	0x566	; 0x566 <main>
  8e:	0c 94 ba 04 	jmp	0x974	; 0x974 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  96:	67 2b       	or	r22, r23
  98:	09 f0       	breq	.+2      	; 0x9c <pinChange+0x6>
  9a:	50 c0       	rjmp	.+160    	; 0x13c <pinChange+0xa6>
  9c:	8a 30       	cpi	r24, 0x0A	; 10
  9e:	91 05       	cpc	r25, r1
  a0:	11 f4       	brne	.+4      	; 0xa6 <pinChange+0x10>
  a2:	28 98       	cbi	0x05, 0	; 5
  a4:	08 95       	ret
  a6:	8b 30       	cpi	r24, 0x0B	; 11
  a8:	91 05       	cpc	r25, r1
  aa:	11 f4       	brne	.+4      	; 0xb0 <pinChange+0x1a>
  ac:	29 98       	cbi	0x05, 1	; 5
  ae:	08 95       	ret
  b0:	8c 30       	cpi	r24, 0x0C	; 12
  b2:	91 05       	cpc	r25, r1
  b4:	11 f4       	brne	.+4      	; 0xba <pinChange+0x24>
  b6:	2a 98       	cbi	0x05, 2	; 5
  b8:	08 95       	ret
  ba:	8d 30       	cpi	r24, 0x0D	; 13
  bc:	91 05       	cpc	r25, r1
  be:	11 f4       	brne	.+4      	; 0xc4 <pinChange+0x2e>
  c0:	2b 98       	cbi	0x05, 3	; 5
  c2:	08 95       	ret
  c4:	8e 30       	cpi	r24, 0x0E	; 14
  c6:	91 05       	cpc	r25, r1
  c8:	11 f4       	brne	.+4      	; 0xce <pinChange+0x38>
  ca:	2c 98       	cbi	0x05, 4	; 5
  cc:	08 95       	ret
  ce:	8f 30       	cpi	r24, 0x0F	; 15
  d0:	91 05       	cpc	r25, r1
  d2:	11 f4       	brne	.+4      	; 0xd8 <pinChange+0x42>
  d4:	2d 98       	cbi	0x05, 5	; 5
  d6:	08 95       	ret
  d8:	80 31       	cpi	r24, 0x10	; 16
  da:	91 05       	cpc	r25, r1
  dc:	11 f4       	brne	.+4      	; 0xe2 <pinChange+0x4c>
  de:	2e 98       	cbi	0x05, 6	; 5
  e0:	08 95       	ret
  e2:	81 31       	cpi	r24, 0x11	; 17
  e4:	91 05       	cpc	r25, r1
  e6:	11 f4       	brne	.+4      	; 0xec <pinChange+0x56>
  e8:	2f 98       	cbi	0x05, 7	; 5
  ea:	08 95       	ret
  ec:	8e 31       	cpi	r24, 0x1E	; 30
  ee:	91 05       	cpc	r25, r1
  f0:	11 f4       	brne	.+4      	; 0xf6 <pinChange+0x60>
  f2:	58 98       	cbi	0x0b, 0	; 11
  f4:	08 95       	ret
  f6:	8f 31       	cpi	r24, 0x1F	; 31
  f8:	91 05       	cpc	r25, r1
  fa:	11 f4       	brne	.+4      	; 0x100 <pinChange+0x6a>
  fc:	59 98       	cbi	0x0b, 1	; 11
  fe:	08 95       	ret
 100:	80 32       	cpi	r24, 0x20	; 32
 102:	91 05       	cpc	r25, r1
 104:	11 f4       	brne	.+4      	; 0x10a <pinChange+0x74>
 106:	5a 98       	cbi	0x0b, 2	; 11
 108:	08 95       	ret
 10a:	81 32       	cpi	r24, 0x21	; 33
 10c:	91 05       	cpc	r25, r1
 10e:	11 f4       	brne	.+4      	; 0x114 <pinChange+0x7e>
 110:	5b 98       	cbi	0x0b, 3	; 11
 112:	08 95       	ret
 114:	82 32       	cpi	r24, 0x22	; 34
 116:	91 05       	cpc	r25, r1
 118:	11 f4       	brne	.+4      	; 0x11e <pinChange+0x88>
 11a:	5c 98       	cbi	0x0b, 4	; 11
 11c:	08 95       	ret
 11e:	83 32       	cpi	r24, 0x23	; 35
 120:	91 05       	cpc	r25, r1
 122:	11 f4       	brne	.+4      	; 0x128 <pinChange+0x92>
 124:	5d 98       	cbi	0x0b, 5	; 11
 126:	08 95       	ret
 128:	84 32       	cpi	r24, 0x24	; 36
 12a:	91 05       	cpc	r25, r1
 12c:	11 f4       	brne	.+4      	; 0x132 <pinChange+0x9c>
 12e:	5e 98       	cbi	0x0b, 6	; 11
 130:	08 95       	ret
 132:	85 97       	sbiw	r24, 0x25	; 37
 134:	09 f0       	breq	.+2      	; 0x138 <pinChange+0xa2>
 136:	50 c0       	rjmp	.+160    	; 0x1d8 <pinChange+0x142>
 138:	5f 98       	cbi	0x0b, 7	; 11
 13a:	08 95       	ret
 13c:	8a 30       	cpi	r24, 0x0A	; 10
 13e:	91 05       	cpc	r25, r1
 140:	11 f4       	brne	.+4      	; 0x146 <pinChange+0xb0>
 142:	28 9a       	sbi	0x05, 0	; 5
 144:	08 95       	ret
 146:	8b 30       	cpi	r24, 0x0B	; 11
 148:	91 05       	cpc	r25, r1
 14a:	11 f4       	brne	.+4      	; 0x150 <pinChange+0xba>
 14c:	29 9a       	sbi	0x05, 1	; 5
 14e:	08 95       	ret
 150:	8c 30       	cpi	r24, 0x0C	; 12
 152:	91 05       	cpc	r25, r1
 154:	11 f4       	brne	.+4      	; 0x15a <pinChange+0xc4>
 156:	2a 9a       	sbi	0x05, 2	; 5
 158:	08 95       	ret
 15a:	8d 30       	cpi	r24, 0x0D	; 13
 15c:	91 05       	cpc	r25, r1
 15e:	11 f4       	brne	.+4      	; 0x164 <pinChange+0xce>
 160:	2b 9a       	sbi	0x05, 3	; 5
 162:	08 95       	ret
 164:	8e 30       	cpi	r24, 0x0E	; 14
 166:	91 05       	cpc	r25, r1
 168:	11 f4       	brne	.+4      	; 0x16e <pinChange+0xd8>
 16a:	2c 9a       	sbi	0x05, 4	; 5
 16c:	08 95       	ret
 16e:	8f 30       	cpi	r24, 0x0F	; 15
 170:	91 05       	cpc	r25, r1
 172:	11 f4       	brne	.+4      	; 0x178 <pinChange+0xe2>
 174:	2d 9a       	sbi	0x05, 5	; 5
 176:	08 95       	ret
 178:	80 31       	cpi	r24, 0x10	; 16
 17a:	91 05       	cpc	r25, r1
 17c:	11 f4       	brne	.+4      	; 0x182 <pinChange+0xec>
 17e:	2e 9a       	sbi	0x05, 6	; 5
 180:	08 95       	ret
 182:	81 31       	cpi	r24, 0x11	; 17
 184:	91 05       	cpc	r25, r1
 186:	11 f4       	brne	.+4      	; 0x18c <pinChange+0xf6>
 188:	2f 9a       	sbi	0x05, 7	; 5
 18a:	08 95       	ret
 18c:	8e 31       	cpi	r24, 0x1E	; 30
 18e:	91 05       	cpc	r25, r1
 190:	11 f4       	brne	.+4      	; 0x196 <pinChange+0x100>
 192:	58 9a       	sbi	0x0b, 0	; 11
 194:	08 95       	ret
 196:	8f 31       	cpi	r24, 0x1F	; 31
 198:	91 05       	cpc	r25, r1
 19a:	11 f4       	brne	.+4      	; 0x1a0 <pinChange+0x10a>
 19c:	59 9a       	sbi	0x0b, 1	; 11
 19e:	08 95       	ret
 1a0:	80 32       	cpi	r24, 0x20	; 32
 1a2:	91 05       	cpc	r25, r1
 1a4:	11 f4       	brne	.+4      	; 0x1aa <pinChange+0x114>
 1a6:	5a 9a       	sbi	0x0b, 2	; 11
 1a8:	08 95       	ret
 1aa:	81 32       	cpi	r24, 0x21	; 33
 1ac:	91 05       	cpc	r25, r1
 1ae:	11 f4       	brne	.+4      	; 0x1b4 <pinChange+0x11e>
 1b0:	5b 9a       	sbi	0x0b, 3	; 11
 1b2:	08 95       	ret
 1b4:	82 32       	cpi	r24, 0x22	; 34
 1b6:	91 05       	cpc	r25, r1
 1b8:	11 f4       	brne	.+4      	; 0x1be <pinChange+0x128>
 1ba:	5c 9a       	sbi	0x0b, 4	; 11
 1bc:	08 95       	ret
 1be:	83 32       	cpi	r24, 0x23	; 35
 1c0:	91 05       	cpc	r25, r1
 1c2:	11 f4       	brne	.+4      	; 0x1c8 <pinChange+0x132>
 1c4:	5d 9a       	sbi	0x0b, 5	; 11
 1c6:	08 95       	ret
 1c8:	84 32       	cpi	r24, 0x24	; 36
 1ca:	91 05       	cpc	r25, r1
 1cc:	11 f4       	brne	.+4      	; 0x1d2 <pinChange+0x13c>
 1ce:	5e 9a       	sbi	0x0b, 6	; 11
 1d0:	08 95       	ret
 1d2:	85 97       	sbiw	r24, 0x25	; 37
 1d4:	09 f4       	brne	.+2      	; 0x1d8 <pinChange+0x142>
 1d6:	5f 9a       	sbi	0x0b, 7	; 11
 1d8:	08 95       	ret

000001da <Lcd8_Port>:
 1da:	cf 93       	push	r28
 1dc:	c8 2f       	mov	r28, r24
 1de:	80 ff       	sbrs	r24, 0
 1e0:	07 c0       	rjmp	.+14     	; 0x1f0 <Lcd8_Port+0x16>
 1e2:	61 e0       	ldi	r22, 0x01	; 1
 1e4:	70 e0       	ldi	r23, 0x00	; 0
 1e6:	85 e2       	ldi	r24, 0x25	; 37
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 1ee:	06 c0       	rjmp	.+12     	; 0x1fc <Lcd8_Port+0x22>
 1f0:	60 e0       	ldi	r22, 0x00	; 0
 1f2:	70 e0       	ldi	r23, 0x00	; 0
 1f4:	85 e2       	ldi	r24, 0x25	; 37
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 1fc:	c1 ff       	sbrs	r28, 1
 1fe:	07 c0       	rjmp	.+14     	; 0x20e <Lcd8_Port+0x34>
 200:	61 e0       	ldi	r22, 0x01	; 1
 202:	70 e0       	ldi	r23, 0x00	; 0
 204:	84 e2       	ldi	r24, 0x24	; 36
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 20c:	06 c0       	rjmp	.+12     	; 0x21a <Lcd8_Port+0x40>
 20e:	60 e0       	ldi	r22, 0x00	; 0
 210:	70 e0       	ldi	r23, 0x00	; 0
 212:	84 e2       	ldi	r24, 0x24	; 36
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 21a:	c2 ff       	sbrs	r28, 2
 21c:	07 c0       	rjmp	.+14     	; 0x22c <Lcd8_Port+0x52>
 21e:	61 e0       	ldi	r22, 0x01	; 1
 220:	70 e0       	ldi	r23, 0x00	; 0
 222:	83 e2       	ldi	r24, 0x23	; 35
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 22a:	06 c0       	rjmp	.+12     	; 0x238 <Lcd8_Port+0x5e>
 22c:	60 e0       	ldi	r22, 0x00	; 0
 22e:	70 e0       	ldi	r23, 0x00	; 0
 230:	83 e2       	ldi	r24, 0x23	; 35
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 238:	c3 ff       	sbrs	r28, 3
 23a:	07 c0       	rjmp	.+14     	; 0x24a <Lcd8_Port+0x70>
 23c:	61 e0       	ldi	r22, 0x01	; 1
 23e:	70 e0       	ldi	r23, 0x00	; 0
 240:	82 e2       	ldi	r24, 0x22	; 34
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 248:	06 c0       	rjmp	.+12     	; 0x256 <Lcd8_Port+0x7c>
 24a:	60 e0       	ldi	r22, 0x00	; 0
 24c:	70 e0       	ldi	r23, 0x00	; 0
 24e:	82 e2       	ldi	r24, 0x22	; 34
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 256:	c4 ff       	sbrs	r28, 4
 258:	07 c0       	rjmp	.+14     	; 0x268 <Lcd8_Port+0x8e>
 25a:	61 e0       	ldi	r22, 0x01	; 1
 25c:	70 e0       	ldi	r23, 0x00	; 0
 25e:	81 e2       	ldi	r24, 0x21	; 33
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 266:	06 c0       	rjmp	.+12     	; 0x274 <Lcd8_Port+0x9a>
 268:	60 e0       	ldi	r22, 0x00	; 0
 26a:	70 e0       	ldi	r23, 0x00	; 0
 26c:	81 e2       	ldi	r24, 0x21	; 33
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 274:	c5 ff       	sbrs	r28, 5
 276:	07 c0       	rjmp	.+14     	; 0x286 <Lcd8_Port+0xac>
 278:	61 e0       	ldi	r22, 0x01	; 1
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	80 e2       	ldi	r24, 0x20	; 32
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 284:	06 c0       	rjmp	.+12     	; 0x292 <Lcd8_Port+0xb8>
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	70 e0       	ldi	r23, 0x00	; 0
 28a:	80 e2       	ldi	r24, 0x20	; 32
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 292:	c6 ff       	sbrs	r28, 6
 294:	07 c0       	rjmp	.+14     	; 0x2a4 <Lcd8_Port+0xca>
 296:	61 e0       	ldi	r22, 0x01	; 1
 298:	70 e0       	ldi	r23, 0x00	; 0
 29a:	8f e1       	ldi	r24, 0x1F	; 31
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 2a2:	06 c0       	rjmp	.+12     	; 0x2b0 <Lcd8_Port+0xd6>
 2a4:	60 e0       	ldi	r22, 0x00	; 0
 2a6:	70 e0       	ldi	r23, 0x00	; 0
 2a8:	8f e1       	ldi	r24, 0x1F	; 31
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 2b0:	cc 23       	and	r28, r28
 2b2:	3c f4       	brge	.+14     	; 0x2c2 <Lcd8_Port+0xe8>
 2b4:	61 e0       	ldi	r22, 0x01	; 1
 2b6:	70 e0       	ldi	r23, 0x00	; 0
 2b8:	8e e1       	ldi	r24, 0x1E	; 30
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 2c0:	06 c0       	rjmp	.+12     	; 0x2ce <Lcd8_Port+0xf4>
 2c2:	60 e0       	ldi	r22, 0x00	; 0
 2c4:	70 e0       	ldi	r23, 0x00	; 0
 2c6:	8e e1       	ldi	r24, 0x1E	; 30
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 2ce:	cf 91       	pop	r28
 2d0:	08 95       	ret

000002d2 <Lcd8_Cmd>:
 2d2:	cf 93       	push	r28
 2d4:	c8 2f       	mov	r28, r24
 2d6:	60 e0       	ldi	r22, 0x00	; 0
 2d8:	70 e0       	ldi	r23, 0x00	; 0
 2da:	8b e0       	ldi	r24, 0x0B	; 11
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 2e2:	8c 2f       	mov	r24, r28
 2e4:	0e 94 ed 00 	call	0x1da	; 0x1da <Lcd8_Port>
 2e8:	61 e0       	ldi	r22, 0x01	; 1
 2ea:	70 e0       	ldi	r23, 0x00	; 0
 2ec:	8a e0       	ldi	r24, 0x0A	; 10
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 2f4:	8f e9       	ldi	r24, 0x9F	; 159
 2f6:	9f e0       	ldi	r25, 0x0F	; 15
 2f8:	01 97       	sbiw	r24, 0x01	; 1
 2fa:	f1 f7       	brne	.-4      	; 0x2f8 <Lcd8_Cmd+0x26>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <Lcd8_Cmd+0x2c>
 2fe:	00 00       	nop
 300:	60 e0       	ldi	r22, 0x00	; 0
 302:	70 e0       	ldi	r23, 0x00	; 0
 304:	8a e0       	ldi	r24, 0x0A	; 10
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 30c:	8f e9       	ldi	r24, 0x9F	; 159
 30e:	9f e0       	ldi	r25, 0x0F	; 15
 310:	01 97       	sbiw	r24, 0x01	; 1
 312:	f1 f7       	brne	.-4      	; 0x310 <Lcd8_Cmd+0x3e>
 314:	00 c0       	rjmp	.+0      	; 0x316 <Lcd8_Cmd+0x44>
 316:	00 00       	nop
 318:	cf 91       	pop	r28
 31a:	08 95       	ret

0000031c <Lcd8_Init>:
 31c:	60 e0       	ldi	r22, 0x00	; 0
 31e:	70 e0       	ldi	r23, 0x00	; 0
 320:	8b e0       	ldi	r24, 0x0B	; 11
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	8a e0       	ldi	r24, 0x0A	; 10
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 334:	2f ef       	ldi	r18, 0xFF	; 255
 336:	89 ef       	ldi	r24, 0xF9	; 249
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	21 50       	subi	r18, 0x01	; 1
 33c:	80 40       	sbci	r24, 0x00	; 0
 33e:	90 40       	sbci	r25, 0x00	; 0
 340:	e1 f7       	brne	.-8      	; 0x33a <Lcd8_Init+0x1e>
 342:	00 c0       	rjmp	.+0      	; 0x344 <Lcd8_Init+0x28>
 344:	00 00       	nop
 346:	80 e3       	ldi	r24, 0x30	; 48
 348:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 34c:	8f e1       	ldi	r24, 0x1F	; 31
 34e:	9e e4       	ldi	r25, 0x4E	; 78
 350:	01 97       	sbiw	r24, 0x01	; 1
 352:	f1 f7       	brne	.-4      	; 0x350 <Lcd8_Init+0x34>
 354:	00 c0       	rjmp	.+0      	; 0x356 <Lcd8_Init+0x3a>
 356:	00 00       	nop
 358:	80 e3       	ldi	r24, 0x30	; 48
 35a:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 35e:	8f e9       	ldi	r24, 0x9F	; 159
 360:	9f e0       	ldi	r25, 0x0F	; 15
 362:	01 97       	sbiw	r24, 0x01	; 1
 364:	f1 f7       	brne	.-4      	; 0x362 <Lcd8_Init+0x46>
 366:	00 c0       	rjmp	.+0      	; 0x368 <Lcd8_Init+0x4c>
 368:	00 00       	nop
 36a:	80 e3       	ldi	r24, 0x30	; 48
 36c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 370:	8f e3       	ldi	r24, 0x3F	; 63
 372:	9c e9       	ldi	r25, 0x9C	; 156
 374:	01 97       	sbiw	r24, 0x01	; 1
 376:	f1 f7       	brne	.-4      	; 0x374 <Lcd8_Init+0x58>
 378:	00 c0       	rjmp	.+0      	; 0x37a <Lcd8_Init+0x5e>
 37a:	00 00       	nop
 37c:	88 e3       	ldi	r24, 0x38	; 56
 37e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 382:	8c e0       	ldi	r24, 0x0C	; 12
 384:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 38e:	86 e0       	ldi	r24, 0x06	; 6
 390:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 394:	08 95       	ret

00000396 <Lcd8_Write_Char>:
 396:	cf 93       	push	r28
 398:	c8 2f       	mov	r28, r24
 39a:	61 e0       	ldi	r22, 0x01	; 1
 39c:	70 e0       	ldi	r23, 0x00	; 0
 39e:	8b e0       	ldi	r24, 0x0B	; 11
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 3a6:	8c 2f       	mov	r24, r28
 3a8:	0e 94 ed 00 	call	0x1da	; 0x1da <Lcd8_Port>
 3ac:	61 e0       	ldi	r22, 0x01	; 1
 3ae:	70 e0       	ldi	r23, 0x00	; 0
 3b0:	8a e0       	ldi	r24, 0x0A	; 10
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 3b8:	8f e9       	ldi	r24, 0x9F	; 159
 3ba:	9f e0       	ldi	r25, 0x0F	; 15
 3bc:	01 97       	sbiw	r24, 0x01	; 1
 3be:	f1 f7       	brne	.-4      	; 0x3bc <Lcd8_Write_Char+0x26>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <Lcd8_Write_Char+0x2c>
 3c2:	00 00       	nop
 3c4:	60 e0       	ldi	r22, 0x00	; 0
 3c6:	70 e0       	ldi	r23, 0x00	; 0
 3c8:	8a e0       	ldi	r24, 0x0A	; 10
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 3d0:	8f e9       	ldi	r24, 0x9F	; 159
 3d2:	9f e0       	ldi	r25, 0x0F	; 15
 3d4:	01 97       	sbiw	r24, 0x01	; 1
 3d6:	f1 f7       	brne	.-4      	; 0x3d4 <Lcd8_Write_Char+0x3e>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <Lcd8_Write_Char+0x44>
 3da:	00 00       	nop
 3dc:	cf 91       	pop	r28
 3de:	08 95       	ret

000003e0 <Lcd8_Write_String>:
 3e0:	cf 93       	push	r28
 3e2:	df 93       	push	r29
 3e4:	ec 01       	movw	r28, r24
 3e6:	88 81       	ld	r24, Y
 3e8:	88 23       	and	r24, r24
 3ea:	31 f0       	breq	.+12     	; 0x3f8 <Lcd8_Write_String+0x18>
 3ec:	21 96       	adiw	r28, 0x01	; 1
 3ee:	0e 94 cb 01 	call	0x396	; 0x396 <Lcd8_Write_Char>
 3f2:	89 91       	ld	r24, Y+
 3f4:	81 11       	cpse	r24, r1
 3f6:	fb cf       	rjmp	.-10     	; 0x3ee <Lcd8_Write_String+0xe>
 3f8:	df 91       	pop	r29
 3fa:	cf 91       	pop	r28
 3fc:	08 95       	ret

000003fe <ftoa>:
		_delay_ms(50);
    }
}

void ftoa(double value, char * buffer)
{
 3fe:	4f 92       	push	r4
 400:	5f 92       	push	r5
 402:	6f 92       	push	r6
 404:	7f 92       	push	r7
 406:	8f 92       	push	r8
 408:	9f 92       	push	r9
 40a:	af 92       	push	r10
 40c:	bf 92       	push	r11
 40e:	ef 92       	push	r14
 410:	ff 92       	push	r15
 412:	0f 93       	push	r16
 414:	1f 93       	push	r17
 416:	cf 93       	push	r28
 418:	df 93       	push	r29
 41a:	00 d0       	rcall	.+0      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 41c:	00 d0       	rcall	.+0      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41e:	cd b7       	in	r28, 0x3d	; 61
 420:	de b7       	in	r29, 0x3e	; 62
 422:	2b 01       	movw	r4, r22
 424:	3c 01       	movw	r6, r24
	//Separar el valor flotanto en dos enteros, uno conteniendo la parte entera y la otra la decimal
	int aux_entero = 0, aux_decimal = 0;
	char buffer_entero[2], buffer_decimal[2];
	aux_entero = (int) value;
 426:	0e 94 54 03 	call	0x6a8	; 0x6a8 <__fixsfsi>
 42a:	4b 01       	movw	r8, r22
 42c:	5c 01       	movw	r10, r24
	aux_decimal = (int)(value*10.0) - aux_entero*10;
 42e:	20 e0       	ldi	r18, 0x00	; 0
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	40 e2       	ldi	r20, 0x20	; 32
 434:	51 e4       	ldi	r21, 0x41	; 65
 436:	c3 01       	movw	r24, r6
 438:	b2 01       	movw	r22, r4
 43a:	0e 94 18 04 	call	0x830	; 0x830 <__mulsf3>
 43e:	0e 94 54 03 	call	0x6a8	; 0x6a8 <__fixsfsi>
 442:	26 ef       	ldi	r18, 0xF6	; 246
 444:	a4 01       	movw	r20, r8
 446:	24 03       	mulsu	r18, r20
 448:	80 01       	movw	r16, r0
 44a:	25 9f       	mul	r18, r21
 44c:	10 0d       	add	r17, r0
 44e:	11 24       	eor	r1, r1
 450:	06 0f       	add	r16, r22
 452:	17 1f       	adc	r17, r23
	//Colocamos el entero y el decimal en dos buffers de dos bits
	if(aux_entero < 10){
 454:	5a e0       	ldi	r21, 0x0A	; 10
 456:	85 16       	cp	r8, r21
 458:	91 04       	cpc	r9, r1
 45a:	1c f4       	brge	.+6      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
		Lcd8_Write_Char(' ');
 45c:	80 e2       	ldi	r24, 0x20	; 32
 45e:	0e 94 cb 01 	call	0x396	; 0x396 <Lcd8_Write_Char>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 462:	4a e0       	ldi	r20, 0x0A	; 10
 464:	be 01       	movw	r22, r28
 466:	6f 5f       	subi	r22, 0xFF	; 255
 468:	7f 4f       	sbci	r23, 0xFF	; 255
 46a:	c4 01       	movw	r24, r8
 46c:	0e 94 85 04 	call	0x90a	; 0x90a <__itoa_ncheck>
	}
	itoa(aux_entero, buffer_entero, 10);
	Lcd8_Write_String(buffer_entero);
 470:	ce 01       	movw	r24, r28
 472:	01 96       	adiw	r24, 0x01	; 1
 474:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd8_Write_String>
	Lcd8_Write_Char(',');
 478:	8c e2       	ldi	r24, 0x2C	; 44
 47a:	0e 94 cb 01 	call	0x396	; 0x396 <Lcd8_Write_Char>
 47e:	4a e0       	ldi	r20, 0x0A	; 10
 480:	be 01       	movw	r22, r28
 482:	6d 5f       	subi	r22, 0xFD	; 253
 484:	7f 4f       	sbci	r23, 0xFF	; 255
 486:	c8 01       	movw	r24, r16
 488:	0e 94 85 04 	call	0x90a	; 0x90a <__itoa_ncheck>
	itoa(aux_decimal, buffer_decimal, 10);
	Lcd8_Write_String(buffer_decimal);
 48c:	ce 01       	movw	r24, r28
 48e:	03 96       	adiw	r24, 0x03	; 3
 490:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd8_Write_String>
}
 494:	0f 90       	pop	r0
 496:	0f 90       	pop	r0
 498:	0f 90       	pop	r0
 49a:	0f 90       	pop	r0
 49c:	df 91       	pop	r29
 49e:	cf 91       	pop	r28
 4a0:	1f 91       	pop	r17
 4a2:	0f 91       	pop	r16
 4a4:	ff 90       	pop	r15
 4a6:	ef 90       	pop	r14
 4a8:	bf 90       	pop	r11
 4aa:	af 90       	pop	r10
 4ac:	9f 90       	pop	r9
 4ae:	8f 90       	pop	r8
 4b0:	7f 90       	pop	r7
 4b2:	6f 90       	pop	r6
 4b4:	5f 90       	pop	r5
 4b6:	4f 90       	pop	r4
 4b8:	08 95       	ret

000004ba <init_adc>:



void init_adc()
{
	ADCSRA |= (1<<ADPS2|1<<ADPS1|1<<ADPS0);		//set pre-escaler to 128 -> 125KHz ADC_clock
 4ba:	ea e7       	ldi	r30, 0x7A	; 122
 4bc:	f0 e0       	ldi	r31, 0x00	; 0
 4be:	80 81       	ld	r24, Z
 4c0:	87 60       	ori	r24, 0x07	; 7
 4c2:	80 83       	st	Z, r24
	ADCSRA |= 1<<ADEN;							//Enables ADC
 4c4:	80 81       	ld	r24, Z
 4c6:	80 68       	ori	r24, 0x80	; 128
 4c8:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0 | 1<<REFS1);				//Enables 1V1 Vref
 4ca:	ec e7       	ldi	r30, 0x7C	; 124
 4cc:	f0 e0       	ldi	r31, 0x00	; 0
 4ce:	80 81       	ld	r24, Z
 4d0:	80 6c       	ori	r24, 0xC0	; 192
 4d2:	80 83       	st	Z, r24
 4d4:	08 95       	ret

000004d6 <adc_single_read>:
8: Temperature sensor
14: 1.1V
15: GND
*/
void adc_single_read(uint16_t * result)
{
 4d6:	dc 01       	movw	r26, r24
	ADMUX |= MUX0;
 4d8:	ec e7       	ldi	r30, 0x7C	; 124
 4da:	f0 e0       	ldi	r31, 0x00	; 0
 4dc:	80 81       	ld	r24, Z
 4de:	80 83       	st	Z, r24
	ADCSRA |= 1<<ADSC;
 4e0:	ea e7       	ldi	r30, 0x7A	; 122
 4e2:	f0 e0       	ldi	r31, 0x00	; 0
 4e4:	90 81       	ld	r25, Z
 4e6:	90 64       	ori	r25, 0x40	; 64
 4e8:	90 83       	st	Z, r25
	while((ADCSRA & 1<<ADSC)){};		
 4ea:	90 81       	ld	r25, Z
 4ec:	96 fd       	sbrc	r25, 6
 4ee:	fd cf       	rjmp	.-6      	; 0x4ea <adc_single_read+0x14>
	*result = ADCW;
 4f0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 4f4:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 4f8:	8d 93       	st	X+, r24
 4fa:	9c 93       	st	X, r25
 4fc:	08 95       	ret

000004fe <ph_avg>:
}

double ph_avg()
{
 4fe:	ef 92       	push	r14
 500:	ff 92       	push	r15
 502:	0f 93       	push	r16
 504:	1f 93       	push	r17
 506:	cf 93       	push	r28
 508:	df 93       	push	r29
 50a:	00 d0       	rcall	.+0      	; 0x50c <ph_avg+0xe>
 50c:	cd b7       	in	r28, 0x3d	; 61
 50e:	de b7       	in	r29, 0x3e	; 62
	uint16_t adc_value = 0, acum = 0;
 510:	1a 82       	std	Y+2, r1	; 0x02
 512:	19 82       	std	Y+1, r1	; 0x01
 514:	02 e3       	ldi	r16, 0x32	; 50
 516:	10 e0       	ldi	r17, 0x00	; 0
 518:	e1 2c       	mov	r14, r1
 51a:	f1 2c       	mov	r15, r1
	for(int i = 0; i<50; i++)
	{
		adc_single_read(&adc_value);
 51c:	ce 01       	movw	r24, r28
 51e:	01 96       	adiw	r24, 0x01	; 1
 520:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <adc_single_read>
		acum += adc_value;
 524:	89 81       	ldd	r24, Y+1	; 0x01
 526:	9a 81       	ldd	r25, Y+2	; 0x02
 528:	e8 0e       	add	r14, r24
 52a:	f9 1e       	adc	r15, r25
 52c:	01 50       	subi	r16, 0x01	; 1
 52e:	11 09       	sbc	r17, r1
}

double ph_avg()
{
	uint16_t adc_value = 0, acum = 0;
	for(int i = 0; i<50; i++)
 530:	a9 f7       	brne	.-22     	; 0x51c <ph_avg+0x1e>
	{
		adc_single_read(&adc_value);
		acum += adc_value;
	}
	return (double)(acum*14.0)/(1023.0*50.0);
 532:	b7 01       	movw	r22, r14
 534:	80 e0       	ldi	r24, 0x00	; 0
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	0e 94 8a 03 	call	0x714	; 0x714 <__floatunsisf>
 53c:	20 e0       	ldi	r18, 0x00	; 0
 53e:	30 e0       	ldi	r19, 0x00	; 0
 540:	40 e6       	ldi	r20, 0x60	; 96
 542:	51 e4       	ldi	r21, 0x41	; 65
 544:	0e 94 18 04 	call	0x830	; 0x830 <__mulsf3>
 548:	20 e0       	ldi	r18, 0x00	; 0
 54a:	3e ec       	ldi	r19, 0xCE	; 206
 54c:	47 e4       	ldi	r20, 0x47	; 71
 54e:	57 e4       	ldi	r21, 0x47	; 71
 550:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__divsf3>
}
 554:	0f 90       	pop	r0
 556:	0f 90       	pop	r0
 558:	df 91       	pop	r29
 55a:	cf 91       	pop	r28
 55c:	1f 91       	pop	r17
 55e:	0f 91       	pop	r16
 560:	ff 90       	pop	r15
 562:	ef 90       	pop	r14
 564:	08 95       	ret

00000566 <main>:
void adc_single_read(uint16_t * value);
double ph_avg();
void ftoa(double value, char * buffer);

int main(void)
{	
 566:	cf 93       	push	r28
 568:	df 93       	push	r29
 56a:	00 d0       	rcall	.+0      	; 0x56c <main+0x6>
 56c:	00 d0       	rcall	.+0      	; 0x56e <main+0x8>
 56e:	cd b7       	in	r28, 0x3d	; 61
 570:	de b7       	in	r29, 0x3e	; 62
	double ph_result = 0.0;
	char buffer[4];
	DDRD = 0xFF;
 572:	8f ef       	ldi	r24, 0xFF	; 255
 574:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF;
 576:	84 b9       	out	0x04, r24	; 4
	Lcd8_Init();
 578:	0e 94 8e 01 	call	0x31c	; 0x31c <Lcd8_Init>
	init_adc();
 57c:	0e 94 5d 02 	call	0x4ba	; 0x4ba <init_adc>
}

void Lcd8_Set_Cursor(char a, char b)
{
	if(a == 1)
	Lcd8_Cmd(0x80 + b);
 580:	80 e8       	ldi	r24, 0x80	; 128
 582:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
	Lcd8_Set_Cursor(1,0);
	Lcd8_Write_String("phMeter V1.0");
 586:	80 e0       	ldi	r24, 0x00	; 0
 588:	91 e0       	ldi	r25, 0x01	; 1
 58a:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd8_Write_String>
	else if(a == 2)
	Lcd8_Cmd(0xC0 + b);
 58e:	80 ec       	ldi	r24, 0xC0	; 192
 590:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
	Lcd8_Set_Cursor(2,0);
	Lcd8_Write_String("pH: ");
 594:	8d e0       	ldi	r24, 0x0D	; 13
 596:	91 e0       	ldi	r25, 0x01	; 1
 598:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd8_Write_String>
 59c:	84 ec       	ldi	r24, 0xC4	; 196
 59e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
    while (1) 
    {	
		Lcd8_Set_Cursor(2, 4);
		ph_result = ph_avg();
 5a2:	0e 94 7f 02 	call	0x4fe	; 0x4fe <ph_avg>
		ftoa(ph_result, buffer);
 5a6:	ae 01       	movw	r20, r28
 5a8:	4f 5f       	subi	r20, 0xFF	; 255
 5aa:	5f 4f       	sbci	r21, 0xFF	; 255
 5ac:	0e 94 ff 01 	call	0x3fe	; 0x3fe <ftoa>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5b0:	2f ef       	ldi	r18, 0xFF	; 255
 5b2:	80 e7       	ldi	r24, 0x70	; 112
 5b4:	92 e0       	ldi	r25, 0x02	; 2
 5b6:	21 50       	subi	r18, 0x01	; 1
 5b8:	80 40       	sbci	r24, 0x00	; 0
 5ba:	90 40       	sbci	r25, 0x00	; 0
 5bc:	e1 f7       	brne	.-8      	; 0x5b6 <main+0x50>
 5be:	00 c0       	rjmp	.+0      	; 0x5c0 <main+0x5a>
 5c0:	00 00       	nop
 5c2:	ec cf       	rjmp	.-40     	; 0x59c <main+0x36>

000005c4 <__divsf3>:
 5c4:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__divsf3x>
 5c8:	0c 94 de 03 	jmp	0x7bc	; 0x7bc <__fp_round>
 5cc:	0e 94 d7 03 	call	0x7ae	; 0x7ae <__fp_pscB>
 5d0:	58 f0       	brcs	.+22     	; 0x5e8 <__divsf3+0x24>
 5d2:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__fp_pscA>
 5d6:	40 f0       	brcs	.+16     	; 0x5e8 <__divsf3+0x24>
 5d8:	29 f4       	brne	.+10     	; 0x5e4 <__divsf3+0x20>
 5da:	5f 3f       	cpi	r21, 0xFF	; 255
 5dc:	29 f0       	breq	.+10     	; 0x5e8 <__divsf3+0x24>
 5de:	0c 94 c7 03 	jmp	0x78e	; 0x78e <__fp_inf>
 5e2:	51 11       	cpse	r21, r1
 5e4:	0c 94 12 04 	jmp	0x824	; 0x824 <__fp_szero>
 5e8:	0c 94 cd 03 	jmp	0x79a	; 0x79a <__fp_nan>

000005ec <__divsf3x>:
 5ec:	0e 94 ef 03 	call	0x7de	; 0x7de <__fp_split3>
 5f0:	68 f3       	brcs	.-38     	; 0x5cc <__divsf3+0x8>

000005f2 <__divsf3_pse>:
 5f2:	99 23       	and	r25, r25
 5f4:	b1 f3       	breq	.-20     	; 0x5e2 <__divsf3+0x1e>
 5f6:	55 23       	and	r21, r21
 5f8:	91 f3       	breq	.-28     	; 0x5de <__divsf3+0x1a>
 5fa:	95 1b       	sub	r25, r21
 5fc:	55 0b       	sbc	r21, r21
 5fe:	bb 27       	eor	r27, r27
 600:	aa 27       	eor	r26, r26
 602:	62 17       	cp	r22, r18
 604:	73 07       	cpc	r23, r19
 606:	84 07       	cpc	r24, r20
 608:	38 f0       	brcs	.+14     	; 0x618 <__divsf3_pse+0x26>
 60a:	9f 5f       	subi	r25, 0xFF	; 255
 60c:	5f 4f       	sbci	r21, 0xFF	; 255
 60e:	22 0f       	add	r18, r18
 610:	33 1f       	adc	r19, r19
 612:	44 1f       	adc	r20, r20
 614:	aa 1f       	adc	r26, r26
 616:	a9 f3       	breq	.-22     	; 0x602 <__divsf3_pse+0x10>
 618:	35 d0       	rcall	.+106    	; 0x684 <__divsf3_pse+0x92>
 61a:	0e 2e       	mov	r0, r30
 61c:	3a f0       	brmi	.+14     	; 0x62c <__divsf3_pse+0x3a>
 61e:	e0 e8       	ldi	r30, 0x80	; 128
 620:	32 d0       	rcall	.+100    	; 0x686 <__divsf3_pse+0x94>
 622:	91 50       	subi	r25, 0x01	; 1
 624:	50 40       	sbci	r21, 0x00	; 0
 626:	e6 95       	lsr	r30
 628:	00 1c       	adc	r0, r0
 62a:	ca f7       	brpl	.-14     	; 0x61e <__divsf3_pse+0x2c>
 62c:	2b d0       	rcall	.+86     	; 0x684 <__divsf3_pse+0x92>
 62e:	fe 2f       	mov	r31, r30
 630:	29 d0       	rcall	.+82     	; 0x684 <__divsf3_pse+0x92>
 632:	66 0f       	add	r22, r22
 634:	77 1f       	adc	r23, r23
 636:	88 1f       	adc	r24, r24
 638:	bb 1f       	adc	r27, r27
 63a:	26 17       	cp	r18, r22
 63c:	37 07       	cpc	r19, r23
 63e:	48 07       	cpc	r20, r24
 640:	ab 07       	cpc	r26, r27
 642:	b0 e8       	ldi	r27, 0x80	; 128
 644:	09 f0       	breq	.+2      	; 0x648 <__divsf3_pse+0x56>
 646:	bb 0b       	sbc	r27, r27
 648:	80 2d       	mov	r24, r0
 64a:	bf 01       	movw	r22, r30
 64c:	ff 27       	eor	r31, r31
 64e:	93 58       	subi	r25, 0x83	; 131
 650:	5f 4f       	sbci	r21, 0xFF	; 255
 652:	3a f0       	brmi	.+14     	; 0x662 <__divsf3_pse+0x70>
 654:	9e 3f       	cpi	r25, 0xFE	; 254
 656:	51 05       	cpc	r21, r1
 658:	78 f0       	brcs	.+30     	; 0x678 <__divsf3_pse+0x86>
 65a:	0c 94 c7 03 	jmp	0x78e	; 0x78e <__fp_inf>
 65e:	0c 94 12 04 	jmp	0x824	; 0x824 <__fp_szero>
 662:	5f 3f       	cpi	r21, 0xFF	; 255
 664:	e4 f3       	brlt	.-8      	; 0x65e <__divsf3_pse+0x6c>
 666:	98 3e       	cpi	r25, 0xE8	; 232
 668:	d4 f3       	brlt	.-12     	; 0x65e <__divsf3_pse+0x6c>
 66a:	86 95       	lsr	r24
 66c:	77 95       	ror	r23
 66e:	67 95       	ror	r22
 670:	b7 95       	ror	r27
 672:	f7 95       	ror	r31
 674:	9f 5f       	subi	r25, 0xFF	; 255
 676:	c9 f7       	brne	.-14     	; 0x66a <__divsf3_pse+0x78>
 678:	88 0f       	add	r24, r24
 67a:	91 1d       	adc	r25, r1
 67c:	96 95       	lsr	r25
 67e:	87 95       	ror	r24
 680:	97 f9       	bld	r25, 7
 682:	08 95       	ret
 684:	e1 e0       	ldi	r30, 0x01	; 1
 686:	66 0f       	add	r22, r22
 688:	77 1f       	adc	r23, r23
 68a:	88 1f       	adc	r24, r24
 68c:	bb 1f       	adc	r27, r27
 68e:	62 17       	cp	r22, r18
 690:	73 07       	cpc	r23, r19
 692:	84 07       	cpc	r24, r20
 694:	ba 07       	cpc	r27, r26
 696:	20 f0       	brcs	.+8      	; 0x6a0 <__divsf3_pse+0xae>
 698:	62 1b       	sub	r22, r18
 69a:	73 0b       	sbc	r23, r19
 69c:	84 0b       	sbc	r24, r20
 69e:	ba 0b       	sbc	r27, r26
 6a0:	ee 1f       	adc	r30, r30
 6a2:	88 f7       	brcc	.-30     	; 0x686 <__divsf3_pse+0x94>
 6a4:	e0 95       	com	r30
 6a6:	08 95       	ret

000006a8 <__fixsfsi>:
 6a8:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <__fixunssfsi>
 6ac:	68 94       	set
 6ae:	b1 11       	cpse	r27, r1
 6b0:	0c 94 12 04 	jmp	0x824	; 0x824 <__fp_szero>
 6b4:	08 95       	ret

000006b6 <__fixunssfsi>:
 6b6:	0e 94 f7 03 	call	0x7ee	; 0x7ee <__fp_splitA>
 6ba:	88 f0       	brcs	.+34     	; 0x6de <__fixunssfsi+0x28>
 6bc:	9f 57       	subi	r25, 0x7F	; 127
 6be:	98 f0       	brcs	.+38     	; 0x6e6 <__fixunssfsi+0x30>
 6c0:	b9 2f       	mov	r27, r25
 6c2:	99 27       	eor	r25, r25
 6c4:	b7 51       	subi	r27, 0x17	; 23
 6c6:	b0 f0       	brcs	.+44     	; 0x6f4 <__fixunssfsi+0x3e>
 6c8:	e1 f0       	breq	.+56     	; 0x702 <__fixunssfsi+0x4c>
 6ca:	66 0f       	add	r22, r22
 6cc:	77 1f       	adc	r23, r23
 6ce:	88 1f       	adc	r24, r24
 6d0:	99 1f       	adc	r25, r25
 6d2:	1a f0       	brmi	.+6      	; 0x6da <__fixunssfsi+0x24>
 6d4:	ba 95       	dec	r27
 6d6:	c9 f7       	brne	.-14     	; 0x6ca <__fixunssfsi+0x14>
 6d8:	14 c0       	rjmp	.+40     	; 0x702 <__fixunssfsi+0x4c>
 6da:	b1 30       	cpi	r27, 0x01	; 1
 6dc:	91 f0       	breq	.+36     	; 0x702 <__fixunssfsi+0x4c>
 6de:	0e 94 11 04 	call	0x822	; 0x822 <__fp_zero>
 6e2:	b1 e0       	ldi	r27, 0x01	; 1
 6e4:	08 95       	ret
 6e6:	0c 94 11 04 	jmp	0x822	; 0x822 <__fp_zero>
 6ea:	67 2f       	mov	r22, r23
 6ec:	78 2f       	mov	r23, r24
 6ee:	88 27       	eor	r24, r24
 6f0:	b8 5f       	subi	r27, 0xF8	; 248
 6f2:	39 f0       	breq	.+14     	; 0x702 <__fixunssfsi+0x4c>
 6f4:	b9 3f       	cpi	r27, 0xF9	; 249
 6f6:	cc f3       	brlt	.-14     	; 0x6ea <__fixunssfsi+0x34>
 6f8:	86 95       	lsr	r24
 6fa:	77 95       	ror	r23
 6fc:	67 95       	ror	r22
 6fe:	b3 95       	inc	r27
 700:	d9 f7       	brne	.-10     	; 0x6f8 <__fixunssfsi+0x42>
 702:	3e f4       	brtc	.+14     	; 0x712 <__fixunssfsi+0x5c>
 704:	90 95       	com	r25
 706:	80 95       	com	r24
 708:	70 95       	com	r23
 70a:	61 95       	neg	r22
 70c:	7f 4f       	sbci	r23, 0xFF	; 255
 70e:	8f 4f       	sbci	r24, 0xFF	; 255
 710:	9f 4f       	sbci	r25, 0xFF	; 255
 712:	08 95       	ret

00000714 <__floatunsisf>:
 714:	e8 94       	clt
 716:	09 c0       	rjmp	.+18     	; 0x72a <__floatsisf+0x12>

00000718 <__floatsisf>:
 718:	97 fb       	bst	r25, 7
 71a:	3e f4       	brtc	.+14     	; 0x72a <__floatsisf+0x12>
 71c:	90 95       	com	r25
 71e:	80 95       	com	r24
 720:	70 95       	com	r23
 722:	61 95       	neg	r22
 724:	7f 4f       	sbci	r23, 0xFF	; 255
 726:	8f 4f       	sbci	r24, 0xFF	; 255
 728:	9f 4f       	sbci	r25, 0xFF	; 255
 72a:	99 23       	and	r25, r25
 72c:	a9 f0       	breq	.+42     	; 0x758 <__floatsisf+0x40>
 72e:	f9 2f       	mov	r31, r25
 730:	96 e9       	ldi	r25, 0x96	; 150
 732:	bb 27       	eor	r27, r27
 734:	93 95       	inc	r25
 736:	f6 95       	lsr	r31
 738:	87 95       	ror	r24
 73a:	77 95       	ror	r23
 73c:	67 95       	ror	r22
 73e:	b7 95       	ror	r27
 740:	f1 11       	cpse	r31, r1
 742:	f8 cf       	rjmp	.-16     	; 0x734 <__floatsisf+0x1c>
 744:	fa f4       	brpl	.+62     	; 0x784 <__floatsisf+0x6c>
 746:	bb 0f       	add	r27, r27
 748:	11 f4       	brne	.+4      	; 0x74e <__floatsisf+0x36>
 74a:	60 ff       	sbrs	r22, 0
 74c:	1b c0       	rjmp	.+54     	; 0x784 <__floatsisf+0x6c>
 74e:	6f 5f       	subi	r22, 0xFF	; 255
 750:	7f 4f       	sbci	r23, 0xFF	; 255
 752:	8f 4f       	sbci	r24, 0xFF	; 255
 754:	9f 4f       	sbci	r25, 0xFF	; 255
 756:	16 c0       	rjmp	.+44     	; 0x784 <__floatsisf+0x6c>
 758:	88 23       	and	r24, r24
 75a:	11 f0       	breq	.+4      	; 0x760 <__floatsisf+0x48>
 75c:	96 e9       	ldi	r25, 0x96	; 150
 75e:	11 c0       	rjmp	.+34     	; 0x782 <__floatsisf+0x6a>
 760:	77 23       	and	r23, r23
 762:	21 f0       	breq	.+8      	; 0x76c <__floatsisf+0x54>
 764:	9e e8       	ldi	r25, 0x8E	; 142
 766:	87 2f       	mov	r24, r23
 768:	76 2f       	mov	r23, r22
 76a:	05 c0       	rjmp	.+10     	; 0x776 <__floatsisf+0x5e>
 76c:	66 23       	and	r22, r22
 76e:	71 f0       	breq	.+28     	; 0x78c <__floatsisf+0x74>
 770:	96 e8       	ldi	r25, 0x86	; 134
 772:	86 2f       	mov	r24, r22
 774:	70 e0       	ldi	r23, 0x00	; 0
 776:	60 e0       	ldi	r22, 0x00	; 0
 778:	2a f0       	brmi	.+10     	; 0x784 <__floatsisf+0x6c>
 77a:	9a 95       	dec	r25
 77c:	66 0f       	add	r22, r22
 77e:	77 1f       	adc	r23, r23
 780:	88 1f       	adc	r24, r24
 782:	da f7       	brpl	.-10     	; 0x77a <__floatsisf+0x62>
 784:	88 0f       	add	r24, r24
 786:	96 95       	lsr	r25
 788:	87 95       	ror	r24
 78a:	97 f9       	bld	r25, 7
 78c:	08 95       	ret

0000078e <__fp_inf>:
 78e:	97 f9       	bld	r25, 7
 790:	9f 67       	ori	r25, 0x7F	; 127
 792:	80 e8       	ldi	r24, 0x80	; 128
 794:	70 e0       	ldi	r23, 0x00	; 0
 796:	60 e0       	ldi	r22, 0x00	; 0
 798:	08 95       	ret

0000079a <__fp_nan>:
 79a:	9f ef       	ldi	r25, 0xFF	; 255
 79c:	80 ec       	ldi	r24, 0xC0	; 192
 79e:	08 95       	ret

000007a0 <__fp_pscA>:
 7a0:	00 24       	eor	r0, r0
 7a2:	0a 94       	dec	r0
 7a4:	16 16       	cp	r1, r22
 7a6:	17 06       	cpc	r1, r23
 7a8:	18 06       	cpc	r1, r24
 7aa:	09 06       	cpc	r0, r25
 7ac:	08 95       	ret

000007ae <__fp_pscB>:
 7ae:	00 24       	eor	r0, r0
 7b0:	0a 94       	dec	r0
 7b2:	12 16       	cp	r1, r18
 7b4:	13 06       	cpc	r1, r19
 7b6:	14 06       	cpc	r1, r20
 7b8:	05 06       	cpc	r0, r21
 7ba:	08 95       	ret

000007bc <__fp_round>:
 7bc:	09 2e       	mov	r0, r25
 7be:	03 94       	inc	r0
 7c0:	00 0c       	add	r0, r0
 7c2:	11 f4       	brne	.+4      	; 0x7c8 <__fp_round+0xc>
 7c4:	88 23       	and	r24, r24
 7c6:	52 f0       	brmi	.+20     	; 0x7dc <__fp_round+0x20>
 7c8:	bb 0f       	add	r27, r27
 7ca:	40 f4       	brcc	.+16     	; 0x7dc <__fp_round+0x20>
 7cc:	bf 2b       	or	r27, r31
 7ce:	11 f4       	brne	.+4      	; 0x7d4 <__fp_round+0x18>
 7d0:	60 ff       	sbrs	r22, 0
 7d2:	04 c0       	rjmp	.+8      	; 0x7dc <__fp_round+0x20>
 7d4:	6f 5f       	subi	r22, 0xFF	; 255
 7d6:	7f 4f       	sbci	r23, 0xFF	; 255
 7d8:	8f 4f       	sbci	r24, 0xFF	; 255
 7da:	9f 4f       	sbci	r25, 0xFF	; 255
 7dc:	08 95       	ret

000007de <__fp_split3>:
 7de:	57 fd       	sbrc	r21, 7
 7e0:	90 58       	subi	r25, 0x80	; 128
 7e2:	44 0f       	add	r20, r20
 7e4:	55 1f       	adc	r21, r21
 7e6:	59 f0       	breq	.+22     	; 0x7fe <__fp_splitA+0x10>
 7e8:	5f 3f       	cpi	r21, 0xFF	; 255
 7ea:	71 f0       	breq	.+28     	; 0x808 <__fp_splitA+0x1a>
 7ec:	47 95       	ror	r20

000007ee <__fp_splitA>:
 7ee:	88 0f       	add	r24, r24
 7f0:	97 fb       	bst	r25, 7
 7f2:	99 1f       	adc	r25, r25
 7f4:	61 f0       	breq	.+24     	; 0x80e <__fp_splitA+0x20>
 7f6:	9f 3f       	cpi	r25, 0xFF	; 255
 7f8:	79 f0       	breq	.+30     	; 0x818 <__fp_splitA+0x2a>
 7fa:	87 95       	ror	r24
 7fc:	08 95       	ret
 7fe:	12 16       	cp	r1, r18
 800:	13 06       	cpc	r1, r19
 802:	14 06       	cpc	r1, r20
 804:	55 1f       	adc	r21, r21
 806:	f2 cf       	rjmp	.-28     	; 0x7ec <__fp_split3+0xe>
 808:	46 95       	lsr	r20
 80a:	f1 df       	rcall	.-30     	; 0x7ee <__fp_splitA>
 80c:	08 c0       	rjmp	.+16     	; 0x81e <__fp_splitA+0x30>
 80e:	16 16       	cp	r1, r22
 810:	17 06       	cpc	r1, r23
 812:	18 06       	cpc	r1, r24
 814:	99 1f       	adc	r25, r25
 816:	f1 cf       	rjmp	.-30     	; 0x7fa <__fp_splitA+0xc>
 818:	86 95       	lsr	r24
 81a:	71 05       	cpc	r23, r1
 81c:	61 05       	cpc	r22, r1
 81e:	08 94       	sec
 820:	08 95       	ret

00000822 <__fp_zero>:
 822:	e8 94       	clt

00000824 <__fp_szero>:
 824:	bb 27       	eor	r27, r27
 826:	66 27       	eor	r22, r22
 828:	77 27       	eor	r23, r23
 82a:	cb 01       	movw	r24, r22
 82c:	97 f9       	bld	r25, 7
 82e:	08 95       	ret

00000830 <__mulsf3>:
 830:	0e 94 2b 04 	call	0x856	; 0x856 <__mulsf3x>
 834:	0c 94 de 03 	jmp	0x7bc	; 0x7bc <__fp_round>
 838:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__fp_pscA>
 83c:	38 f0       	brcs	.+14     	; 0x84c <__mulsf3+0x1c>
 83e:	0e 94 d7 03 	call	0x7ae	; 0x7ae <__fp_pscB>
 842:	20 f0       	brcs	.+8      	; 0x84c <__mulsf3+0x1c>
 844:	95 23       	and	r25, r21
 846:	11 f0       	breq	.+4      	; 0x84c <__mulsf3+0x1c>
 848:	0c 94 c7 03 	jmp	0x78e	; 0x78e <__fp_inf>
 84c:	0c 94 cd 03 	jmp	0x79a	; 0x79a <__fp_nan>
 850:	11 24       	eor	r1, r1
 852:	0c 94 12 04 	jmp	0x824	; 0x824 <__fp_szero>

00000856 <__mulsf3x>:
 856:	0e 94 ef 03 	call	0x7de	; 0x7de <__fp_split3>
 85a:	70 f3       	brcs	.-36     	; 0x838 <__mulsf3+0x8>

0000085c <__mulsf3_pse>:
 85c:	95 9f       	mul	r25, r21
 85e:	c1 f3       	breq	.-16     	; 0x850 <__mulsf3+0x20>
 860:	95 0f       	add	r25, r21
 862:	50 e0       	ldi	r21, 0x00	; 0
 864:	55 1f       	adc	r21, r21
 866:	62 9f       	mul	r22, r18
 868:	f0 01       	movw	r30, r0
 86a:	72 9f       	mul	r23, r18
 86c:	bb 27       	eor	r27, r27
 86e:	f0 0d       	add	r31, r0
 870:	b1 1d       	adc	r27, r1
 872:	63 9f       	mul	r22, r19
 874:	aa 27       	eor	r26, r26
 876:	f0 0d       	add	r31, r0
 878:	b1 1d       	adc	r27, r1
 87a:	aa 1f       	adc	r26, r26
 87c:	64 9f       	mul	r22, r20
 87e:	66 27       	eor	r22, r22
 880:	b0 0d       	add	r27, r0
 882:	a1 1d       	adc	r26, r1
 884:	66 1f       	adc	r22, r22
 886:	82 9f       	mul	r24, r18
 888:	22 27       	eor	r18, r18
 88a:	b0 0d       	add	r27, r0
 88c:	a1 1d       	adc	r26, r1
 88e:	62 1f       	adc	r22, r18
 890:	73 9f       	mul	r23, r19
 892:	b0 0d       	add	r27, r0
 894:	a1 1d       	adc	r26, r1
 896:	62 1f       	adc	r22, r18
 898:	83 9f       	mul	r24, r19
 89a:	a0 0d       	add	r26, r0
 89c:	61 1d       	adc	r22, r1
 89e:	22 1f       	adc	r18, r18
 8a0:	74 9f       	mul	r23, r20
 8a2:	33 27       	eor	r19, r19
 8a4:	a0 0d       	add	r26, r0
 8a6:	61 1d       	adc	r22, r1
 8a8:	23 1f       	adc	r18, r19
 8aa:	84 9f       	mul	r24, r20
 8ac:	60 0d       	add	r22, r0
 8ae:	21 1d       	adc	r18, r1
 8b0:	82 2f       	mov	r24, r18
 8b2:	76 2f       	mov	r23, r22
 8b4:	6a 2f       	mov	r22, r26
 8b6:	11 24       	eor	r1, r1
 8b8:	9f 57       	subi	r25, 0x7F	; 127
 8ba:	50 40       	sbci	r21, 0x00	; 0
 8bc:	9a f0       	brmi	.+38     	; 0x8e4 <__mulsf3_pse+0x88>
 8be:	f1 f0       	breq	.+60     	; 0x8fc <__mulsf3_pse+0xa0>
 8c0:	88 23       	and	r24, r24
 8c2:	4a f0       	brmi	.+18     	; 0x8d6 <__mulsf3_pse+0x7a>
 8c4:	ee 0f       	add	r30, r30
 8c6:	ff 1f       	adc	r31, r31
 8c8:	bb 1f       	adc	r27, r27
 8ca:	66 1f       	adc	r22, r22
 8cc:	77 1f       	adc	r23, r23
 8ce:	88 1f       	adc	r24, r24
 8d0:	91 50       	subi	r25, 0x01	; 1
 8d2:	50 40       	sbci	r21, 0x00	; 0
 8d4:	a9 f7       	brne	.-22     	; 0x8c0 <__mulsf3_pse+0x64>
 8d6:	9e 3f       	cpi	r25, 0xFE	; 254
 8d8:	51 05       	cpc	r21, r1
 8da:	80 f0       	brcs	.+32     	; 0x8fc <__mulsf3_pse+0xa0>
 8dc:	0c 94 c7 03 	jmp	0x78e	; 0x78e <__fp_inf>
 8e0:	0c 94 12 04 	jmp	0x824	; 0x824 <__fp_szero>
 8e4:	5f 3f       	cpi	r21, 0xFF	; 255
 8e6:	e4 f3       	brlt	.-8      	; 0x8e0 <__mulsf3_pse+0x84>
 8e8:	98 3e       	cpi	r25, 0xE8	; 232
 8ea:	d4 f3       	brlt	.-12     	; 0x8e0 <__mulsf3_pse+0x84>
 8ec:	86 95       	lsr	r24
 8ee:	77 95       	ror	r23
 8f0:	67 95       	ror	r22
 8f2:	b7 95       	ror	r27
 8f4:	f7 95       	ror	r31
 8f6:	e7 95       	ror	r30
 8f8:	9f 5f       	subi	r25, 0xFF	; 255
 8fa:	c1 f7       	brne	.-16     	; 0x8ec <__mulsf3_pse+0x90>
 8fc:	fe 2b       	or	r31, r30
 8fe:	88 0f       	add	r24, r24
 900:	91 1d       	adc	r25, r1
 902:	96 95       	lsr	r25
 904:	87 95       	ror	r24
 906:	97 f9       	bld	r25, 7
 908:	08 95       	ret

0000090a <__itoa_ncheck>:
 90a:	bb 27       	eor	r27, r27
 90c:	4a 30       	cpi	r20, 0x0A	; 10
 90e:	31 f4       	brne	.+12     	; 0x91c <__itoa_ncheck+0x12>
 910:	99 23       	and	r25, r25
 912:	22 f4       	brpl	.+8      	; 0x91c <__itoa_ncheck+0x12>
 914:	bd e2       	ldi	r27, 0x2D	; 45
 916:	90 95       	com	r25
 918:	81 95       	neg	r24
 91a:	9f 4f       	sbci	r25, 0xFF	; 255
 91c:	0c 94 91 04 	jmp	0x922	; 0x922 <__utoa_common>

00000920 <__utoa_ncheck>:
 920:	bb 27       	eor	r27, r27

00000922 <__utoa_common>:
 922:	fb 01       	movw	r30, r22
 924:	55 27       	eor	r21, r21
 926:	aa 27       	eor	r26, r26
 928:	88 0f       	add	r24, r24
 92a:	99 1f       	adc	r25, r25
 92c:	aa 1f       	adc	r26, r26
 92e:	a4 17       	cp	r26, r20
 930:	10 f0       	brcs	.+4      	; 0x936 <__utoa_common+0x14>
 932:	a4 1b       	sub	r26, r20
 934:	83 95       	inc	r24
 936:	50 51       	subi	r21, 0x10	; 16
 938:	b9 f7       	brne	.-18     	; 0x928 <__utoa_common+0x6>
 93a:	a0 5d       	subi	r26, 0xD0	; 208
 93c:	aa 33       	cpi	r26, 0x3A	; 58
 93e:	08 f0       	brcs	.+2      	; 0x942 <__utoa_common+0x20>
 940:	a9 5d       	subi	r26, 0xD9	; 217
 942:	a1 93       	st	Z+, r26
 944:	00 97       	sbiw	r24, 0x00	; 0
 946:	79 f7       	brne	.-34     	; 0x926 <__utoa_common+0x4>
 948:	b1 11       	cpse	r27, r1
 94a:	b1 93       	st	Z+, r27
 94c:	11 92       	st	Z+, r1
 94e:	cb 01       	movw	r24, r22
 950:	0c 94 aa 04 	jmp	0x954	; 0x954 <strrev>

00000954 <strrev>:
 954:	dc 01       	movw	r26, r24
 956:	fc 01       	movw	r30, r24
 958:	67 2f       	mov	r22, r23
 95a:	71 91       	ld	r23, Z+
 95c:	77 23       	and	r23, r23
 95e:	e1 f7       	brne	.-8      	; 0x958 <strrev+0x4>
 960:	32 97       	sbiw	r30, 0x02	; 2
 962:	04 c0       	rjmp	.+8      	; 0x96c <strrev+0x18>
 964:	7c 91       	ld	r23, X
 966:	6d 93       	st	X+, r22
 968:	70 83       	st	Z, r23
 96a:	62 91       	ld	r22, -Z
 96c:	ae 17       	cp	r26, r30
 96e:	bf 07       	cpc	r27, r31
 970:	c8 f3       	brcs	.-14     	; 0x964 <strrev+0x10>
 972:	08 95       	ret

00000974 <_exit>:
 974:	f8 94       	cli

00000976 <__stop_program>:
 976:	ff cf       	rjmp	.-2      	; 0x976 <__stop_program>
