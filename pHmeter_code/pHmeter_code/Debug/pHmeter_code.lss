
pHmeter_code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000ac2  00000b36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ac2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000b44  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b74  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  00000bb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000019be  00000000  00000000  00000c8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008e5  00000000  00000000  0000264a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009b7  00000000  00000000  00002f2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000025c  00000000  00000000  000038e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000053d  00000000  00000000  00003b44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ed0  00000000  00000000  00004081  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  00004f51  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ec       	ldi	r30, 0xC2	; 194
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 30       	cpi	r26, 0x0E	; 14
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 bc 02 	call	0x578	; 0x578 <main>
  8e:	0c 94 5f 05 	jmp	0xabe	; 0xabe <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  96:	67 2b       	or	r22, r23
  98:	09 f0       	breq	.+2      	; 0x9c <pinChange+0x6>
  9a:	50 c0       	rjmp	.+160    	; 0x13c <pinChange+0xa6>
  9c:	8a 30       	cpi	r24, 0x0A	; 10
  9e:	91 05       	cpc	r25, r1
  a0:	11 f4       	brne	.+4      	; 0xa6 <pinChange+0x10>
  a2:	28 98       	cbi	0x05, 0	; 5
  a4:	08 95       	ret
  a6:	8b 30       	cpi	r24, 0x0B	; 11
  a8:	91 05       	cpc	r25, r1
  aa:	11 f4       	brne	.+4      	; 0xb0 <pinChange+0x1a>
  ac:	29 98       	cbi	0x05, 1	; 5
  ae:	08 95       	ret
  b0:	8c 30       	cpi	r24, 0x0C	; 12
  b2:	91 05       	cpc	r25, r1
  b4:	11 f4       	brne	.+4      	; 0xba <pinChange+0x24>
  b6:	2a 98       	cbi	0x05, 2	; 5
  b8:	08 95       	ret
  ba:	8d 30       	cpi	r24, 0x0D	; 13
  bc:	91 05       	cpc	r25, r1
  be:	11 f4       	brne	.+4      	; 0xc4 <pinChange+0x2e>
  c0:	2b 98       	cbi	0x05, 3	; 5
  c2:	08 95       	ret
  c4:	8e 30       	cpi	r24, 0x0E	; 14
  c6:	91 05       	cpc	r25, r1
  c8:	11 f4       	brne	.+4      	; 0xce <pinChange+0x38>
  ca:	2c 98       	cbi	0x05, 4	; 5
  cc:	08 95       	ret
  ce:	8f 30       	cpi	r24, 0x0F	; 15
  d0:	91 05       	cpc	r25, r1
  d2:	11 f4       	brne	.+4      	; 0xd8 <pinChange+0x42>
  d4:	2d 98       	cbi	0x05, 5	; 5
  d6:	08 95       	ret
  d8:	80 31       	cpi	r24, 0x10	; 16
  da:	91 05       	cpc	r25, r1
  dc:	11 f4       	brne	.+4      	; 0xe2 <pinChange+0x4c>
  de:	2e 98       	cbi	0x05, 6	; 5
  e0:	08 95       	ret
  e2:	81 31       	cpi	r24, 0x11	; 17
  e4:	91 05       	cpc	r25, r1
  e6:	11 f4       	brne	.+4      	; 0xec <pinChange+0x56>
  e8:	2f 98       	cbi	0x05, 7	; 5
  ea:	08 95       	ret
  ec:	8e 31       	cpi	r24, 0x1E	; 30
  ee:	91 05       	cpc	r25, r1
  f0:	11 f4       	brne	.+4      	; 0xf6 <pinChange+0x60>
  f2:	58 98       	cbi	0x0b, 0	; 11
  f4:	08 95       	ret
  f6:	8f 31       	cpi	r24, 0x1F	; 31
  f8:	91 05       	cpc	r25, r1
  fa:	11 f4       	brne	.+4      	; 0x100 <pinChange+0x6a>
  fc:	59 98       	cbi	0x0b, 1	; 11
  fe:	08 95       	ret
 100:	80 32       	cpi	r24, 0x20	; 32
 102:	91 05       	cpc	r25, r1
 104:	11 f4       	brne	.+4      	; 0x10a <pinChange+0x74>
 106:	5a 98       	cbi	0x0b, 2	; 11
 108:	08 95       	ret
 10a:	81 32       	cpi	r24, 0x21	; 33
 10c:	91 05       	cpc	r25, r1
 10e:	11 f4       	brne	.+4      	; 0x114 <pinChange+0x7e>
 110:	5b 98       	cbi	0x0b, 3	; 11
 112:	08 95       	ret
 114:	82 32       	cpi	r24, 0x22	; 34
 116:	91 05       	cpc	r25, r1
 118:	11 f4       	brne	.+4      	; 0x11e <pinChange+0x88>
 11a:	5c 98       	cbi	0x0b, 4	; 11
 11c:	08 95       	ret
 11e:	83 32       	cpi	r24, 0x23	; 35
 120:	91 05       	cpc	r25, r1
 122:	11 f4       	brne	.+4      	; 0x128 <pinChange+0x92>
 124:	5d 98       	cbi	0x0b, 5	; 11
 126:	08 95       	ret
 128:	84 32       	cpi	r24, 0x24	; 36
 12a:	91 05       	cpc	r25, r1
 12c:	11 f4       	brne	.+4      	; 0x132 <pinChange+0x9c>
 12e:	5e 98       	cbi	0x0b, 6	; 11
 130:	08 95       	ret
 132:	85 97       	sbiw	r24, 0x25	; 37
 134:	09 f0       	breq	.+2      	; 0x138 <pinChange+0xa2>
 136:	50 c0       	rjmp	.+160    	; 0x1d8 <pinChange+0x142>
 138:	5f 98       	cbi	0x0b, 7	; 11
 13a:	08 95       	ret
 13c:	8a 30       	cpi	r24, 0x0A	; 10
 13e:	91 05       	cpc	r25, r1
 140:	11 f4       	brne	.+4      	; 0x146 <pinChange+0xb0>
 142:	28 9a       	sbi	0x05, 0	; 5
 144:	08 95       	ret
 146:	8b 30       	cpi	r24, 0x0B	; 11
 148:	91 05       	cpc	r25, r1
 14a:	11 f4       	brne	.+4      	; 0x150 <pinChange+0xba>
 14c:	29 9a       	sbi	0x05, 1	; 5
 14e:	08 95       	ret
 150:	8c 30       	cpi	r24, 0x0C	; 12
 152:	91 05       	cpc	r25, r1
 154:	11 f4       	brne	.+4      	; 0x15a <pinChange+0xc4>
 156:	2a 9a       	sbi	0x05, 2	; 5
 158:	08 95       	ret
 15a:	8d 30       	cpi	r24, 0x0D	; 13
 15c:	91 05       	cpc	r25, r1
 15e:	11 f4       	brne	.+4      	; 0x164 <pinChange+0xce>
 160:	2b 9a       	sbi	0x05, 3	; 5
 162:	08 95       	ret
 164:	8e 30       	cpi	r24, 0x0E	; 14
 166:	91 05       	cpc	r25, r1
 168:	11 f4       	brne	.+4      	; 0x16e <pinChange+0xd8>
 16a:	2c 9a       	sbi	0x05, 4	; 5
 16c:	08 95       	ret
 16e:	8f 30       	cpi	r24, 0x0F	; 15
 170:	91 05       	cpc	r25, r1
 172:	11 f4       	brne	.+4      	; 0x178 <pinChange+0xe2>
 174:	2d 9a       	sbi	0x05, 5	; 5
 176:	08 95       	ret
 178:	80 31       	cpi	r24, 0x10	; 16
 17a:	91 05       	cpc	r25, r1
 17c:	11 f4       	brne	.+4      	; 0x182 <pinChange+0xec>
 17e:	2e 9a       	sbi	0x05, 6	; 5
 180:	08 95       	ret
 182:	81 31       	cpi	r24, 0x11	; 17
 184:	91 05       	cpc	r25, r1
 186:	11 f4       	brne	.+4      	; 0x18c <pinChange+0xf6>
 188:	2f 9a       	sbi	0x05, 7	; 5
 18a:	08 95       	ret
 18c:	8e 31       	cpi	r24, 0x1E	; 30
 18e:	91 05       	cpc	r25, r1
 190:	11 f4       	brne	.+4      	; 0x196 <pinChange+0x100>
 192:	58 9a       	sbi	0x0b, 0	; 11
 194:	08 95       	ret
 196:	8f 31       	cpi	r24, 0x1F	; 31
 198:	91 05       	cpc	r25, r1
 19a:	11 f4       	brne	.+4      	; 0x1a0 <pinChange+0x10a>
 19c:	59 9a       	sbi	0x0b, 1	; 11
 19e:	08 95       	ret
 1a0:	80 32       	cpi	r24, 0x20	; 32
 1a2:	91 05       	cpc	r25, r1
 1a4:	11 f4       	brne	.+4      	; 0x1aa <pinChange+0x114>
 1a6:	5a 9a       	sbi	0x0b, 2	; 11
 1a8:	08 95       	ret
 1aa:	81 32       	cpi	r24, 0x21	; 33
 1ac:	91 05       	cpc	r25, r1
 1ae:	11 f4       	brne	.+4      	; 0x1b4 <pinChange+0x11e>
 1b0:	5b 9a       	sbi	0x0b, 3	; 11
 1b2:	08 95       	ret
 1b4:	82 32       	cpi	r24, 0x22	; 34
 1b6:	91 05       	cpc	r25, r1
 1b8:	11 f4       	brne	.+4      	; 0x1be <pinChange+0x128>
 1ba:	5c 9a       	sbi	0x0b, 4	; 11
 1bc:	08 95       	ret
 1be:	83 32       	cpi	r24, 0x23	; 35
 1c0:	91 05       	cpc	r25, r1
 1c2:	11 f4       	brne	.+4      	; 0x1c8 <pinChange+0x132>
 1c4:	5d 9a       	sbi	0x0b, 5	; 11
 1c6:	08 95       	ret
 1c8:	84 32       	cpi	r24, 0x24	; 36
 1ca:	91 05       	cpc	r25, r1
 1cc:	11 f4       	brne	.+4      	; 0x1d2 <pinChange+0x13c>
 1ce:	5e 9a       	sbi	0x0b, 6	; 11
 1d0:	08 95       	ret
 1d2:	85 97       	sbiw	r24, 0x25	; 37
 1d4:	09 f4       	brne	.+2      	; 0x1d8 <pinChange+0x142>
 1d6:	5f 9a       	sbi	0x0b, 7	; 11
 1d8:	08 95       	ret

000001da <Lcd8_Port>:
 1da:	cf 93       	push	r28
 1dc:	c8 2f       	mov	r28, r24
 1de:	80 ff       	sbrs	r24, 0
 1e0:	07 c0       	rjmp	.+14     	; 0x1f0 <Lcd8_Port+0x16>
 1e2:	61 e0       	ldi	r22, 0x01	; 1
 1e4:	70 e0       	ldi	r23, 0x00	; 0
 1e6:	8e e1       	ldi	r24, 0x1E	; 30
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 1ee:	06 c0       	rjmp	.+12     	; 0x1fc <Lcd8_Port+0x22>
 1f0:	60 e0       	ldi	r22, 0x00	; 0
 1f2:	70 e0       	ldi	r23, 0x00	; 0
 1f4:	8e e1       	ldi	r24, 0x1E	; 30
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 1fc:	c1 ff       	sbrs	r28, 1
 1fe:	07 c0       	rjmp	.+14     	; 0x20e <Lcd8_Port+0x34>
 200:	61 e0       	ldi	r22, 0x01	; 1
 202:	70 e0       	ldi	r23, 0x00	; 0
 204:	8f e1       	ldi	r24, 0x1F	; 31
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 20c:	06 c0       	rjmp	.+12     	; 0x21a <Lcd8_Port+0x40>
 20e:	60 e0       	ldi	r22, 0x00	; 0
 210:	70 e0       	ldi	r23, 0x00	; 0
 212:	8f e1       	ldi	r24, 0x1F	; 31
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 21a:	c2 ff       	sbrs	r28, 2
 21c:	07 c0       	rjmp	.+14     	; 0x22c <Lcd8_Port+0x52>
 21e:	61 e0       	ldi	r22, 0x01	; 1
 220:	70 e0       	ldi	r23, 0x00	; 0
 222:	80 e2       	ldi	r24, 0x20	; 32
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 22a:	06 c0       	rjmp	.+12     	; 0x238 <Lcd8_Port+0x5e>
 22c:	60 e0       	ldi	r22, 0x00	; 0
 22e:	70 e0       	ldi	r23, 0x00	; 0
 230:	80 e2       	ldi	r24, 0x20	; 32
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 238:	c3 ff       	sbrs	r28, 3
 23a:	07 c0       	rjmp	.+14     	; 0x24a <Lcd8_Port+0x70>
 23c:	61 e0       	ldi	r22, 0x01	; 1
 23e:	70 e0       	ldi	r23, 0x00	; 0
 240:	81 e2       	ldi	r24, 0x21	; 33
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 248:	06 c0       	rjmp	.+12     	; 0x256 <Lcd8_Port+0x7c>
 24a:	60 e0       	ldi	r22, 0x00	; 0
 24c:	70 e0       	ldi	r23, 0x00	; 0
 24e:	81 e2       	ldi	r24, 0x21	; 33
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 256:	c4 ff       	sbrs	r28, 4
 258:	07 c0       	rjmp	.+14     	; 0x268 <Lcd8_Port+0x8e>
 25a:	61 e0       	ldi	r22, 0x01	; 1
 25c:	70 e0       	ldi	r23, 0x00	; 0
 25e:	82 e2       	ldi	r24, 0x22	; 34
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 266:	06 c0       	rjmp	.+12     	; 0x274 <Lcd8_Port+0x9a>
 268:	60 e0       	ldi	r22, 0x00	; 0
 26a:	70 e0       	ldi	r23, 0x00	; 0
 26c:	82 e2       	ldi	r24, 0x22	; 34
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 274:	c5 ff       	sbrs	r28, 5
 276:	07 c0       	rjmp	.+14     	; 0x286 <Lcd8_Port+0xac>
 278:	61 e0       	ldi	r22, 0x01	; 1
 27a:	70 e0       	ldi	r23, 0x00	; 0
 27c:	83 e2       	ldi	r24, 0x23	; 35
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 284:	06 c0       	rjmp	.+12     	; 0x292 <Lcd8_Port+0xb8>
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	70 e0       	ldi	r23, 0x00	; 0
 28a:	83 e2       	ldi	r24, 0x23	; 35
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 292:	c6 ff       	sbrs	r28, 6
 294:	07 c0       	rjmp	.+14     	; 0x2a4 <Lcd8_Port+0xca>
 296:	61 e0       	ldi	r22, 0x01	; 1
 298:	70 e0       	ldi	r23, 0x00	; 0
 29a:	84 e2       	ldi	r24, 0x24	; 36
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 2a2:	06 c0       	rjmp	.+12     	; 0x2b0 <Lcd8_Port+0xd6>
 2a4:	60 e0       	ldi	r22, 0x00	; 0
 2a6:	70 e0       	ldi	r23, 0x00	; 0
 2a8:	84 e2       	ldi	r24, 0x24	; 36
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 2b0:	cc 23       	and	r28, r28
 2b2:	3c f4       	brge	.+14     	; 0x2c2 <Lcd8_Port+0xe8>
 2b4:	61 e0       	ldi	r22, 0x01	; 1
 2b6:	70 e0       	ldi	r23, 0x00	; 0
 2b8:	85 e2       	ldi	r24, 0x25	; 37
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 2c0:	06 c0       	rjmp	.+12     	; 0x2ce <Lcd8_Port+0xf4>
 2c2:	60 e0       	ldi	r22, 0x00	; 0
 2c4:	70 e0       	ldi	r23, 0x00	; 0
 2c6:	85 e2       	ldi	r24, 0x25	; 37
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 2ce:	cf 91       	pop	r28
 2d0:	08 95       	ret

000002d2 <Lcd8_Cmd>:
 2d2:	cf 93       	push	r28
 2d4:	c8 2f       	mov	r28, r24
 2d6:	60 e0       	ldi	r22, 0x00	; 0
 2d8:	70 e0       	ldi	r23, 0x00	; 0
 2da:	8b e0       	ldi	r24, 0x0B	; 11
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 2e2:	8c 2f       	mov	r24, r28
 2e4:	0e 94 ed 00 	call	0x1da	; 0x1da <Lcd8_Port>
 2e8:	61 e0       	ldi	r22, 0x01	; 1
 2ea:	70 e0       	ldi	r23, 0x00	; 0
 2ec:	8a e0       	ldi	r24, 0x0A	; 10
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 2f4:	8f e9       	ldi	r24, 0x9F	; 159
 2f6:	9f e0       	ldi	r25, 0x0F	; 15
 2f8:	01 97       	sbiw	r24, 0x01	; 1
 2fa:	f1 f7       	brne	.-4      	; 0x2f8 <Lcd8_Cmd+0x26>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <Lcd8_Cmd+0x2c>
 2fe:	00 00       	nop
 300:	60 e0       	ldi	r22, 0x00	; 0
 302:	70 e0       	ldi	r23, 0x00	; 0
 304:	8a e0       	ldi	r24, 0x0A	; 10
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 30c:	8f e9       	ldi	r24, 0x9F	; 159
 30e:	9f e0       	ldi	r25, 0x0F	; 15
 310:	01 97       	sbiw	r24, 0x01	; 1
 312:	f1 f7       	brne	.-4      	; 0x310 <Lcd8_Cmd+0x3e>
 314:	00 c0       	rjmp	.+0      	; 0x316 <Lcd8_Cmd+0x44>
 316:	00 00       	nop
 318:	cf 91       	pop	r28
 31a:	08 95       	ret

0000031c <Lcd8_Init>:
 31c:	60 e0       	ldi	r22, 0x00	; 0
 31e:	70 e0       	ldi	r23, 0x00	; 0
 320:	8b e0       	ldi	r24, 0x0B	; 11
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	8a e0       	ldi	r24, 0x0A	; 10
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 334:	2f ef       	ldi	r18, 0xFF	; 255
 336:	89 ef       	ldi	r24, 0xF9	; 249
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	21 50       	subi	r18, 0x01	; 1
 33c:	80 40       	sbci	r24, 0x00	; 0
 33e:	90 40       	sbci	r25, 0x00	; 0
 340:	e1 f7       	brne	.-8      	; 0x33a <Lcd8_Init+0x1e>
 342:	00 c0       	rjmp	.+0      	; 0x344 <Lcd8_Init+0x28>
 344:	00 00       	nop
 346:	80 e3       	ldi	r24, 0x30	; 48
 348:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 34c:	8f e1       	ldi	r24, 0x1F	; 31
 34e:	9e e4       	ldi	r25, 0x4E	; 78
 350:	01 97       	sbiw	r24, 0x01	; 1
 352:	f1 f7       	brne	.-4      	; 0x350 <Lcd8_Init+0x34>
 354:	00 c0       	rjmp	.+0      	; 0x356 <Lcd8_Init+0x3a>
 356:	00 00       	nop
 358:	80 e3       	ldi	r24, 0x30	; 48
 35a:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 35e:	8f e9       	ldi	r24, 0x9F	; 159
 360:	9f e0       	ldi	r25, 0x0F	; 15
 362:	01 97       	sbiw	r24, 0x01	; 1
 364:	f1 f7       	brne	.-4      	; 0x362 <Lcd8_Init+0x46>
 366:	00 c0       	rjmp	.+0      	; 0x368 <Lcd8_Init+0x4c>
 368:	00 00       	nop
 36a:	80 e3       	ldi	r24, 0x30	; 48
 36c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 370:	8f e3       	ldi	r24, 0x3F	; 63
 372:	9c e9       	ldi	r25, 0x9C	; 156
 374:	01 97       	sbiw	r24, 0x01	; 1
 376:	f1 f7       	brne	.-4      	; 0x374 <Lcd8_Init+0x58>
 378:	00 c0       	rjmp	.+0      	; 0x37a <Lcd8_Init+0x5e>
 37a:	00 00       	nop
 37c:	88 e3       	ldi	r24, 0x38	; 56
 37e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 382:	8c e0       	ldi	r24, 0x0C	; 12
 384:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 38e:	86 e0       	ldi	r24, 0x06	; 6
 390:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
 394:	08 95       	ret

00000396 <Lcd8_Write_Char>:
 396:	cf 93       	push	r28
 398:	c8 2f       	mov	r28, r24
 39a:	61 e0       	ldi	r22, 0x01	; 1
 39c:	70 e0       	ldi	r23, 0x00	; 0
 39e:	8b e0       	ldi	r24, 0x0B	; 11
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 3a6:	8c 2f       	mov	r24, r28
 3a8:	0e 94 ed 00 	call	0x1da	; 0x1da <Lcd8_Port>
 3ac:	61 e0       	ldi	r22, 0x01	; 1
 3ae:	70 e0       	ldi	r23, 0x00	; 0
 3b0:	8a e0       	ldi	r24, 0x0A	; 10
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 3b8:	8f e9       	ldi	r24, 0x9F	; 159
 3ba:	9f e0       	ldi	r25, 0x0F	; 15
 3bc:	01 97       	sbiw	r24, 0x01	; 1
 3be:	f1 f7       	brne	.-4      	; 0x3bc <Lcd8_Write_Char+0x26>
 3c0:	00 c0       	rjmp	.+0      	; 0x3c2 <Lcd8_Write_Char+0x2c>
 3c2:	00 00       	nop
 3c4:	60 e0       	ldi	r22, 0x00	; 0
 3c6:	70 e0       	ldi	r23, 0x00	; 0
 3c8:	8a e0       	ldi	r24, 0x0A	; 10
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	0e 94 4b 00 	call	0x96	; 0x96 <pinChange>
 3d0:	8f e9       	ldi	r24, 0x9F	; 159
 3d2:	9f e0       	ldi	r25, 0x0F	; 15
 3d4:	01 97       	sbiw	r24, 0x01	; 1
 3d6:	f1 f7       	brne	.-4      	; 0x3d4 <Lcd8_Write_Char+0x3e>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <Lcd8_Write_Char+0x44>
 3da:	00 00       	nop
 3dc:	cf 91       	pop	r28
 3de:	08 95       	ret

000003e0 <Lcd8_Write_String>:
 3e0:	cf 93       	push	r28
 3e2:	df 93       	push	r29
 3e4:	ec 01       	movw	r28, r24
 3e6:	88 81       	ld	r24, Y
 3e8:	88 23       	and	r24, r24
 3ea:	31 f0       	breq	.+12     	; 0x3f8 <Lcd8_Write_String+0x18>
 3ec:	21 96       	adiw	r28, 0x01	; 1
 3ee:	0e 94 cb 01 	call	0x396	; 0x396 <Lcd8_Write_Char>
 3f2:	89 91       	ld	r24, Y+
 3f4:	81 11       	cpse	r24, r1
 3f6:	fb cf       	rjmp	.-10     	; 0x3ee <Lcd8_Write_String+0xe>
 3f8:	df 91       	pop	r29
 3fa:	cf 91       	pop	r28
 3fc:	08 95       	ret

000003fe <ftoa>:
		_delay_ms(10);
    }
}

void ftoa(double value, char * buffer)
{
 3fe:	8f 92       	push	r8
 400:	9f 92       	push	r9
 402:	af 92       	push	r10
 404:	bf 92       	push	r11
 406:	cf 92       	push	r12
 408:	df 92       	push	r13
 40a:	ef 92       	push	r14
 40c:	ff 92       	push	r15
 40e:	0f 93       	push	r16
 410:	1f 93       	push	r17
 412:	cf 93       	push	r28
 414:	df 93       	push	r29
 416:	00 d0       	rcall	.+0      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 418:	cd b7       	in	r28, 0x3d	; 61
 41a:	de b7       	in	r29, 0x3e	; 62
 41c:	4b 01       	movw	r8, r22
 41e:	5c 01       	movw	r10, r24
 420:	8a 01       	movw	r16, r20
	int aux_1 = 0, aux_2 = 0;
	char buffer_1[2], buffer_2[2];
	if(value < 10)
 422:	20 e0       	ldi	r18, 0x00	; 0
 424:	30 e0       	ldi	r19, 0x00	; 0
 426:	40 e2       	ldi	r20, 0x20	; 32
 428:	51 e4       	ldi	r21, 0x41	; 65
 42a:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__cmpsf2>
 42e:	88 23       	and	r24, r24
 430:	2c f4       	brge	.+10     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
	{
		strcpy(buffer, "0");
 432:	80 e3       	ldi	r24, 0x30	; 48
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	f8 01       	movw	r30, r16
 438:	91 83       	std	Z+1, r25	; 0x01
 43a:	80 83       	st	Z, r24
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 43c:	20 e0       	ldi	r18, 0x00	; 0
 43e:	30 e0       	ldi	r19, 0x00	; 0
 440:	48 ec       	ldi	r20, 0xC8	; 200
 442:	52 e4       	ldi	r21, 0x42	; 66
 444:	c5 01       	movw	r24, r10
 446:	b4 01       	movw	r22, r8
 448:	0e 94 b2 04 	call	0x964	; 0x964 <__mulsf3>
 44c:	6b 01       	movw	r12, r22
 44e:	7c 01       	movw	r14, r24
 450:	c5 01       	movw	r24, r10
 452:	b4 01       	movw	r22, r8
 454:	0e 94 ca 03 	call	0x794	; 0x794 <__fixsfsi>
 458:	24 e6       	ldi	r18, 0x64	; 100
 45a:	26 9f       	mul	r18, r22
 45c:	a0 01       	movw	r20, r0
 45e:	27 9f       	mul	r18, r23
 460:	50 0d       	add	r21, r0
 462:	11 24       	eor	r1, r1
 464:	ba 01       	movw	r22, r20
 466:	55 0f       	add	r21, r21
 468:	88 0b       	sbc	r24, r24
 46a:	99 0b       	sbc	r25, r25
 46c:	0e 94 02 04 	call	0x804	; 0x804 <__floatsisf>
 470:	9b 01       	movw	r18, r22
 472:	ac 01       	movw	r20, r24
 474:	c7 01       	movw	r24, r14
 476:	b6 01       	movw	r22, r12
 478:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__subsf3>
 47c:	0e 94 ca 03 	call	0x794	; 0x794 <__fixsfsi>
 480:	dc 01       	movw	r26, r24
 482:	cb 01       	movw	r24, r22
 484:	4a e0       	ldi	r20, 0x0A	; 10
 486:	be 01       	movw	r22, r28
 488:	6f 5f       	subi	r22, 0xFF	; 255
 48a:	7f 4f       	sbci	r23, 0xFF	; 255
 48c:	0e 94 2a 05 	call	0xa54	; 0xa54 <__itoa_ncheck>
	aux_1 = (int) value;
	aux_2 = (int) (value*100 - aux_1*100);
	//itoa(aux_1, buffer_1, 10);
	itoa(aux_2, buffer_2, 10);
	//strcat(buffer, buffer_1);
	strcat(buffer, ",");
 490:	f8 01       	movw	r30, r16
 492:	01 90       	ld	r0, Z+
 494:	00 20       	and	r0, r0
 496:	e9 f7       	brne	.-6      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 498:	31 97       	sbiw	r30, 0x01	; 1
 49a:	8c e2       	ldi	r24, 0x2C	; 44
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	91 83       	std	Z+1, r25	; 0x01
 4a0:	80 83       	st	Z, r24
	strcat(buffer, buffer_2);
 4a2:	be 01       	movw	r22, r28
 4a4:	6f 5f       	subi	r22, 0xFF	; 255
 4a6:	7f 4f       	sbci	r23, 0xFF	; 255
 4a8:	c8 01       	movw	r24, r16
 4aa:	0e 94 1f 05 	call	0xa3e	; 0xa3e <strcat>

}
 4ae:	0f 90       	pop	r0
 4b0:	0f 90       	pop	r0
 4b2:	df 91       	pop	r29
 4b4:	cf 91       	pop	r28
 4b6:	1f 91       	pop	r17
 4b8:	0f 91       	pop	r16
 4ba:	ff 90       	pop	r15
 4bc:	ef 90       	pop	r14
 4be:	df 90       	pop	r13
 4c0:	cf 90       	pop	r12
 4c2:	bf 90       	pop	r11
 4c4:	af 90       	pop	r10
 4c6:	9f 90       	pop	r9
 4c8:	8f 90       	pop	r8
 4ca:	08 95       	ret

000004cc <init_adc>:



void init_adc()
{
	ADCSRA |= (1<<ADPS2|1<<ADPS1|1<<ADPS0);		//set pre-escaler to 128 -> 125KHz ADC_clock
 4cc:	ea e7       	ldi	r30, 0x7A	; 122
 4ce:	f0 e0       	ldi	r31, 0x00	; 0
 4d0:	80 81       	ld	r24, Z
 4d2:	87 60       	ori	r24, 0x07	; 7
 4d4:	80 83       	st	Z, r24
	ADCSRA |= 1<<ADEN;							//Enables ADC
 4d6:	80 81       	ld	r24, Z
 4d8:	80 68       	ori	r24, 0x80	; 128
 4da:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0 | 1<<REFS1);				//Enables 1V1 Vref
 4dc:	ec e7       	ldi	r30, 0x7C	; 124
 4de:	f0 e0       	ldi	r31, 0x00	; 0
 4e0:	80 81       	ld	r24, Z
 4e2:	80 6c       	ori	r24, 0xC0	; 192
 4e4:	80 83       	st	Z, r24
 4e6:	08 95       	ret

000004e8 <adc_single_read>:
8: Temperature sensor
14: 1.1V
15: GND
*/
void adc_single_read(uint16_t * result)
{
 4e8:	dc 01       	movw	r26, r24
	ADMUX |= MUX0;
 4ea:	ec e7       	ldi	r30, 0x7C	; 124
 4ec:	f0 e0       	ldi	r31, 0x00	; 0
 4ee:	80 81       	ld	r24, Z
 4f0:	80 83       	st	Z, r24
	ADCSRA |= 1<<ADSC;
 4f2:	ea e7       	ldi	r30, 0x7A	; 122
 4f4:	f0 e0       	ldi	r31, 0x00	; 0
 4f6:	90 81       	ld	r25, Z
 4f8:	90 64       	ori	r25, 0x40	; 64
 4fa:	90 83       	st	Z, r25
	while((ADCSRA & 1<<ADSC)){};		
 4fc:	90 81       	ld	r25, Z
 4fe:	96 fd       	sbrc	r25, 6
 500:	fd cf       	rjmp	.-6      	; 0x4fc <adc_single_read+0x14>
	*result = ADCW;
 502:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 506:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 50a:	8d 93       	st	X+, r24
 50c:	9c 93       	st	X, r25
 50e:	08 95       	ret

00000510 <ph_avg>:
}

double ph_avg()
{
 510:	ef 92       	push	r14
 512:	ff 92       	push	r15
 514:	0f 93       	push	r16
 516:	1f 93       	push	r17
 518:	cf 93       	push	r28
 51a:	df 93       	push	r29
 51c:	00 d0       	rcall	.+0      	; 0x51e <ph_avg+0xe>
 51e:	cd b7       	in	r28, 0x3d	; 61
 520:	de b7       	in	r29, 0x3e	; 62
	uint16_t adc_value = 0, acum = 0;
 522:	1a 82       	std	Y+2, r1	; 0x02
 524:	19 82       	std	Y+1, r1	; 0x01
 526:	02 e3       	ldi	r16, 0x32	; 50
 528:	10 e0       	ldi	r17, 0x00	; 0
 52a:	e1 2c       	mov	r14, r1
 52c:	f1 2c       	mov	r15, r1
	for(int i = 0; i<50; i++)
	{
		adc_single_read(&adc_value);
 52e:	ce 01       	movw	r24, r28
 530:	01 96       	adiw	r24, 0x01	; 1
 532:	0e 94 74 02 	call	0x4e8	; 0x4e8 <adc_single_read>
		acum += adc_value;
 536:	89 81       	ldd	r24, Y+1	; 0x01
 538:	9a 81       	ldd	r25, Y+2	; 0x02
 53a:	e8 0e       	add	r14, r24
 53c:	f9 1e       	adc	r15, r25
 53e:	01 50       	subi	r16, 0x01	; 1
 540:	11 09       	sbc	r17, r1
}

double ph_avg()
{
	uint16_t adc_value = 0, acum = 0;
	for(int i = 0; i<50; i++)
 542:	a9 f7       	brne	.-22     	; 0x52e <ph_avg+0x1e>
	{
		adc_single_read(&adc_value);
		acum += adc_value;
	}
	return (acum/50.0)*(14.0/1023);
 544:	b7 01       	movw	r22, r14
 546:	80 e0       	ldi	r24, 0x00	; 0
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	0e 94 00 04 	call	0x800	; 0x800 <__floatunsisf>
 54e:	20 e0       	ldi	r18, 0x00	; 0
 550:	30 e0       	ldi	r19, 0x00	; 0
 552:	48 e4       	ldi	r20, 0x48	; 72
 554:	52 e4       	ldi	r21, 0x42	; 66
 556:	0e 94 58 03 	call	0x6b0	; 0x6b0 <__divsf3>
 55a:	2e e0       	ldi	r18, 0x0E	; 14
 55c:	38 e3       	ldi	r19, 0x38	; 56
 55e:	40 e6       	ldi	r20, 0x60	; 96
 560:	5c e3       	ldi	r21, 0x3C	; 60
 562:	0e 94 b2 04 	call	0x964	; 0x964 <__mulsf3>
}
 566:	0f 90       	pop	r0
 568:	0f 90       	pop	r0
 56a:	df 91       	pop	r29
 56c:	cf 91       	pop	r28
 56e:	1f 91       	pop	r17
 570:	0f 91       	pop	r16
 572:	ff 90       	pop	r15
 574:	ef 90       	pop	r14
 576:	08 95       	ret

00000578 <main>:
void adc_single_read(uint16_t * value);
double ph_avg();
void ftoa(double value, char * buffer);

int main(void)
{	
 578:	cf 93       	push	r28
 57a:	df 93       	push	r29
 57c:	00 d0       	rcall	.+0      	; 0x57e <main+0x6>
 57e:	00 d0       	rcall	.+0      	; 0x580 <main+0x8>
 580:	1f 92       	push	r1
 582:	cd b7       	in	r28, 0x3d	; 61
 584:	de b7       	in	r29, 0x3e	; 62
	double ph_result = 0.0;
	char buffer[5];
	DDRD = 0xFF;
 586:	8f ef       	ldi	r24, 0xFF	; 255
 588:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF;
 58a:	84 b9       	out	0x04, r24	; 4
	Lcd8_Init();
 58c:	0e 94 8e 01 	call	0x31c	; 0x31c <Lcd8_Init>
	init_adc();
 590:	0e 94 66 02 	call	0x4cc	; 0x4cc <init_adc>
}

void Lcd8_Set_Cursor(char a, char b)
{
	if(a == 1)
	Lcd8_Cmd(0x80 + b);
 594:	80 e8       	ldi	r24, 0x80	; 128
 596:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
    while (1) 
    {
		Lcd8_Set_Cursor(1,0);
		Lcd8_Write_String("pH-Meter V1.0");
 59a:	80 e0       	ldi	r24, 0x00	; 0
 59c:	91 e0       	ldi	r25, 0x01	; 1
 59e:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd8_Write_String>
	else if(a == 2)
	Lcd8_Cmd(0xC0 + b);
 5a2:	80 ec       	ldi	r24, 0xC0	; 192
 5a4:	0e 94 69 01 	call	0x2d2	; 0x2d2 <Lcd8_Cmd>
		Lcd8_Set_Cursor(2,0);
		ph_result = ph_avg();
 5a8:	0e 94 88 02 	call	0x510	; 0x510 <ph_avg>
		ftoa(ph_result, buffer);
 5ac:	ae 01       	movw	r20, r28
 5ae:	4f 5f       	subi	r20, 0xFF	; 255
 5b0:	5f 4f       	sbci	r21, 0xFF	; 255
 5b2:	0e 94 ff 01 	call	0x3fe	; 0x3fe <ftoa>
		Lcd8_Write_String(buffer);
 5b6:	ce 01       	movw	r24, r28
 5b8:	01 96       	adiw	r24, 0x01	; 1
 5ba:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <Lcd8_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5be:	8f e3       	ldi	r24, 0x3F	; 63
 5c0:	9c e9       	ldi	r25, 0x9C	; 156
 5c2:	01 97       	sbiw	r24, 0x01	; 1
 5c4:	f1 f7       	brne	.-4      	; 0x5c2 <main+0x4a>
 5c6:	00 c0       	rjmp	.+0      	; 0x5c8 <main+0x50>
 5c8:	00 00       	nop
 5ca:	e4 cf       	rjmp	.-56     	; 0x594 <main+0x1c>

000005cc <__subsf3>:
 5cc:	50 58       	subi	r21, 0x80	; 128

000005ce <__addsf3>:
 5ce:	bb 27       	eor	r27, r27
 5d0:	aa 27       	eor	r26, r26
 5d2:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__addsf3x>
 5d6:	0c 94 78 04 	jmp	0x8f0	; 0x8f0 <__fp_round>
 5da:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__fp_pscA>
 5de:	38 f0       	brcs	.+14     	; 0x5ee <__addsf3+0x20>
 5e0:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__fp_pscB>
 5e4:	20 f0       	brcs	.+8      	; 0x5ee <__addsf3+0x20>
 5e6:	39 f4       	brne	.+14     	; 0x5f6 <__addsf3+0x28>
 5e8:	9f 3f       	cpi	r25, 0xFF	; 255
 5ea:	19 f4       	brne	.+6      	; 0x5f2 <__addsf3+0x24>
 5ec:	26 f4       	brtc	.+8      	; 0x5f6 <__addsf3+0x28>
 5ee:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <__fp_nan>
 5f2:	0e f4       	brtc	.+2      	; 0x5f6 <__addsf3+0x28>
 5f4:	e0 95       	com	r30
 5f6:	e7 fb       	bst	r30, 7
 5f8:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__fp_inf>

000005fc <__addsf3x>:
 5fc:	e9 2f       	mov	r30, r25
 5fe:	0e 94 89 04 	call	0x912	; 0x912 <__fp_split3>
 602:	58 f3       	brcs	.-42     	; 0x5da <__addsf3+0xc>
 604:	ba 17       	cp	r27, r26
 606:	62 07       	cpc	r22, r18
 608:	73 07       	cpc	r23, r19
 60a:	84 07       	cpc	r24, r20
 60c:	95 07       	cpc	r25, r21
 60e:	20 f0       	brcs	.+8      	; 0x618 <__addsf3x+0x1c>
 610:	79 f4       	brne	.+30     	; 0x630 <__addsf3x+0x34>
 612:	a6 f5       	brtc	.+104    	; 0x67c <__addsf3x+0x80>
 614:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_zero>
 618:	0e f4       	brtc	.+2      	; 0x61c <__addsf3x+0x20>
 61a:	e0 95       	com	r30
 61c:	0b 2e       	mov	r0, r27
 61e:	ba 2f       	mov	r27, r26
 620:	a0 2d       	mov	r26, r0
 622:	0b 01       	movw	r0, r22
 624:	b9 01       	movw	r22, r18
 626:	90 01       	movw	r18, r0
 628:	0c 01       	movw	r0, r24
 62a:	ca 01       	movw	r24, r20
 62c:	a0 01       	movw	r20, r0
 62e:	11 24       	eor	r1, r1
 630:	ff 27       	eor	r31, r31
 632:	59 1b       	sub	r21, r25
 634:	99 f0       	breq	.+38     	; 0x65c <__addsf3x+0x60>
 636:	59 3f       	cpi	r21, 0xF9	; 249
 638:	50 f4       	brcc	.+20     	; 0x64e <__addsf3x+0x52>
 63a:	50 3e       	cpi	r21, 0xE0	; 224
 63c:	68 f1       	brcs	.+90     	; 0x698 <__addsf3x+0x9c>
 63e:	1a 16       	cp	r1, r26
 640:	f0 40       	sbci	r31, 0x00	; 0
 642:	a2 2f       	mov	r26, r18
 644:	23 2f       	mov	r18, r19
 646:	34 2f       	mov	r19, r20
 648:	44 27       	eor	r20, r20
 64a:	58 5f       	subi	r21, 0xF8	; 248
 64c:	f3 cf       	rjmp	.-26     	; 0x634 <__addsf3x+0x38>
 64e:	46 95       	lsr	r20
 650:	37 95       	ror	r19
 652:	27 95       	ror	r18
 654:	a7 95       	ror	r26
 656:	f0 40       	sbci	r31, 0x00	; 0
 658:	53 95       	inc	r21
 65a:	c9 f7       	brne	.-14     	; 0x64e <__addsf3x+0x52>
 65c:	7e f4       	brtc	.+30     	; 0x67c <__addsf3x+0x80>
 65e:	1f 16       	cp	r1, r31
 660:	ba 0b       	sbc	r27, r26
 662:	62 0b       	sbc	r22, r18
 664:	73 0b       	sbc	r23, r19
 666:	84 0b       	sbc	r24, r20
 668:	ba f0       	brmi	.+46     	; 0x698 <__addsf3x+0x9c>
 66a:	91 50       	subi	r25, 0x01	; 1
 66c:	a1 f0       	breq	.+40     	; 0x696 <__addsf3x+0x9a>
 66e:	ff 0f       	add	r31, r31
 670:	bb 1f       	adc	r27, r27
 672:	66 1f       	adc	r22, r22
 674:	77 1f       	adc	r23, r23
 676:	88 1f       	adc	r24, r24
 678:	c2 f7       	brpl	.-16     	; 0x66a <__addsf3x+0x6e>
 67a:	0e c0       	rjmp	.+28     	; 0x698 <__addsf3x+0x9c>
 67c:	ba 0f       	add	r27, r26
 67e:	62 1f       	adc	r22, r18
 680:	73 1f       	adc	r23, r19
 682:	84 1f       	adc	r24, r20
 684:	48 f4       	brcc	.+18     	; 0x698 <__addsf3x+0x9c>
 686:	87 95       	ror	r24
 688:	77 95       	ror	r23
 68a:	67 95       	ror	r22
 68c:	b7 95       	ror	r27
 68e:	f7 95       	ror	r31
 690:	9e 3f       	cpi	r25, 0xFE	; 254
 692:	08 f0       	brcs	.+2      	; 0x696 <__addsf3x+0x9a>
 694:	b0 cf       	rjmp	.-160    	; 0x5f6 <__addsf3+0x28>
 696:	93 95       	inc	r25
 698:	88 0f       	add	r24, r24
 69a:	08 f0       	brcs	.+2      	; 0x69e <__addsf3x+0xa2>
 69c:	99 27       	eor	r25, r25
 69e:	ee 0f       	add	r30, r30
 6a0:	97 95       	ror	r25
 6a2:	87 95       	ror	r24
 6a4:	08 95       	ret

000006a6 <__cmpsf2>:
 6a6:	0e 94 3d 04 	call	0x87a	; 0x87a <__fp_cmp>
 6aa:	08 f4       	brcc	.+2      	; 0x6ae <__cmpsf2+0x8>
 6ac:	81 e0       	ldi	r24, 0x01	; 1
 6ae:	08 95       	ret

000006b0 <__divsf3>:
 6b0:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <__divsf3x>
 6b4:	0c 94 78 04 	jmp	0x8f0	; 0x8f0 <__fp_round>
 6b8:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__fp_pscB>
 6bc:	58 f0       	brcs	.+22     	; 0x6d4 <__divsf3+0x24>
 6be:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__fp_pscA>
 6c2:	40 f0       	brcs	.+16     	; 0x6d4 <__divsf3+0x24>
 6c4:	29 f4       	brne	.+10     	; 0x6d0 <__divsf3+0x20>
 6c6:	5f 3f       	cpi	r21, 0xFF	; 255
 6c8:	29 f0       	breq	.+10     	; 0x6d4 <__divsf3+0x24>
 6ca:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__fp_inf>
 6ce:	51 11       	cpse	r21, r1
 6d0:	0c 94 ac 04 	jmp	0x958	; 0x958 <__fp_szero>
 6d4:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <__fp_nan>

000006d8 <__divsf3x>:
 6d8:	0e 94 89 04 	call	0x912	; 0x912 <__fp_split3>
 6dc:	68 f3       	brcs	.-38     	; 0x6b8 <__divsf3+0x8>

000006de <__divsf3_pse>:
 6de:	99 23       	and	r25, r25
 6e0:	b1 f3       	breq	.-20     	; 0x6ce <__divsf3+0x1e>
 6e2:	55 23       	and	r21, r21
 6e4:	91 f3       	breq	.-28     	; 0x6ca <__divsf3+0x1a>
 6e6:	95 1b       	sub	r25, r21
 6e8:	55 0b       	sbc	r21, r21
 6ea:	bb 27       	eor	r27, r27
 6ec:	aa 27       	eor	r26, r26
 6ee:	62 17       	cp	r22, r18
 6f0:	73 07       	cpc	r23, r19
 6f2:	84 07       	cpc	r24, r20
 6f4:	38 f0       	brcs	.+14     	; 0x704 <__divsf3_pse+0x26>
 6f6:	9f 5f       	subi	r25, 0xFF	; 255
 6f8:	5f 4f       	sbci	r21, 0xFF	; 255
 6fa:	22 0f       	add	r18, r18
 6fc:	33 1f       	adc	r19, r19
 6fe:	44 1f       	adc	r20, r20
 700:	aa 1f       	adc	r26, r26
 702:	a9 f3       	breq	.-22     	; 0x6ee <__divsf3_pse+0x10>
 704:	35 d0       	rcall	.+106    	; 0x770 <__divsf3_pse+0x92>
 706:	0e 2e       	mov	r0, r30
 708:	3a f0       	brmi	.+14     	; 0x718 <__divsf3_pse+0x3a>
 70a:	e0 e8       	ldi	r30, 0x80	; 128
 70c:	32 d0       	rcall	.+100    	; 0x772 <__divsf3_pse+0x94>
 70e:	91 50       	subi	r25, 0x01	; 1
 710:	50 40       	sbci	r21, 0x00	; 0
 712:	e6 95       	lsr	r30
 714:	00 1c       	adc	r0, r0
 716:	ca f7       	brpl	.-14     	; 0x70a <__divsf3_pse+0x2c>
 718:	2b d0       	rcall	.+86     	; 0x770 <__divsf3_pse+0x92>
 71a:	fe 2f       	mov	r31, r30
 71c:	29 d0       	rcall	.+82     	; 0x770 <__divsf3_pse+0x92>
 71e:	66 0f       	add	r22, r22
 720:	77 1f       	adc	r23, r23
 722:	88 1f       	adc	r24, r24
 724:	bb 1f       	adc	r27, r27
 726:	26 17       	cp	r18, r22
 728:	37 07       	cpc	r19, r23
 72a:	48 07       	cpc	r20, r24
 72c:	ab 07       	cpc	r26, r27
 72e:	b0 e8       	ldi	r27, 0x80	; 128
 730:	09 f0       	breq	.+2      	; 0x734 <__divsf3_pse+0x56>
 732:	bb 0b       	sbc	r27, r27
 734:	80 2d       	mov	r24, r0
 736:	bf 01       	movw	r22, r30
 738:	ff 27       	eor	r31, r31
 73a:	93 58       	subi	r25, 0x83	; 131
 73c:	5f 4f       	sbci	r21, 0xFF	; 255
 73e:	3a f0       	brmi	.+14     	; 0x74e <__divsf3_pse+0x70>
 740:	9e 3f       	cpi	r25, 0xFE	; 254
 742:	51 05       	cpc	r21, r1
 744:	78 f0       	brcs	.+30     	; 0x764 <__divsf3_pse+0x86>
 746:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__fp_inf>
 74a:	0c 94 ac 04 	jmp	0x958	; 0x958 <__fp_szero>
 74e:	5f 3f       	cpi	r21, 0xFF	; 255
 750:	e4 f3       	brlt	.-8      	; 0x74a <__divsf3_pse+0x6c>
 752:	98 3e       	cpi	r25, 0xE8	; 232
 754:	d4 f3       	brlt	.-12     	; 0x74a <__divsf3_pse+0x6c>
 756:	86 95       	lsr	r24
 758:	77 95       	ror	r23
 75a:	67 95       	ror	r22
 75c:	b7 95       	ror	r27
 75e:	f7 95       	ror	r31
 760:	9f 5f       	subi	r25, 0xFF	; 255
 762:	c9 f7       	brne	.-14     	; 0x756 <__divsf3_pse+0x78>
 764:	88 0f       	add	r24, r24
 766:	91 1d       	adc	r25, r1
 768:	96 95       	lsr	r25
 76a:	87 95       	ror	r24
 76c:	97 f9       	bld	r25, 7
 76e:	08 95       	ret
 770:	e1 e0       	ldi	r30, 0x01	; 1
 772:	66 0f       	add	r22, r22
 774:	77 1f       	adc	r23, r23
 776:	88 1f       	adc	r24, r24
 778:	bb 1f       	adc	r27, r27
 77a:	62 17       	cp	r22, r18
 77c:	73 07       	cpc	r23, r19
 77e:	84 07       	cpc	r24, r20
 780:	ba 07       	cpc	r27, r26
 782:	20 f0       	brcs	.+8      	; 0x78c <__divsf3_pse+0xae>
 784:	62 1b       	sub	r22, r18
 786:	73 0b       	sbc	r23, r19
 788:	84 0b       	sbc	r24, r20
 78a:	ba 0b       	sbc	r27, r26
 78c:	ee 1f       	adc	r30, r30
 78e:	88 f7       	brcc	.-30     	; 0x772 <__divsf3_pse+0x94>
 790:	e0 95       	com	r30
 792:	08 95       	ret

00000794 <__fixsfsi>:
 794:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__fixunssfsi>
 798:	68 94       	set
 79a:	b1 11       	cpse	r27, r1
 79c:	0c 94 ac 04 	jmp	0x958	; 0x958 <__fp_szero>
 7a0:	08 95       	ret

000007a2 <__fixunssfsi>:
 7a2:	0e 94 91 04 	call	0x922	; 0x922 <__fp_splitA>
 7a6:	88 f0       	brcs	.+34     	; 0x7ca <__fixunssfsi+0x28>
 7a8:	9f 57       	subi	r25, 0x7F	; 127
 7aa:	98 f0       	brcs	.+38     	; 0x7d2 <__fixunssfsi+0x30>
 7ac:	b9 2f       	mov	r27, r25
 7ae:	99 27       	eor	r25, r25
 7b0:	b7 51       	subi	r27, 0x17	; 23
 7b2:	b0 f0       	brcs	.+44     	; 0x7e0 <__fixunssfsi+0x3e>
 7b4:	e1 f0       	breq	.+56     	; 0x7ee <__fixunssfsi+0x4c>
 7b6:	66 0f       	add	r22, r22
 7b8:	77 1f       	adc	r23, r23
 7ba:	88 1f       	adc	r24, r24
 7bc:	99 1f       	adc	r25, r25
 7be:	1a f0       	brmi	.+6      	; 0x7c6 <__fixunssfsi+0x24>
 7c0:	ba 95       	dec	r27
 7c2:	c9 f7       	brne	.-14     	; 0x7b6 <__fixunssfsi+0x14>
 7c4:	14 c0       	rjmp	.+40     	; 0x7ee <__fixunssfsi+0x4c>
 7c6:	b1 30       	cpi	r27, 0x01	; 1
 7c8:	91 f0       	breq	.+36     	; 0x7ee <__fixunssfsi+0x4c>
 7ca:	0e 94 ab 04 	call	0x956	; 0x956 <__fp_zero>
 7ce:	b1 e0       	ldi	r27, 0x01	; 1
 7d0:	08 95       	ret
 7d2:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_zero>
 7d6:	67 2f       	mov	r22, r23
 7d8:	78 2f       	mov	r23, r24
 7da:	88 27       	eor	r24, r24
 7dc:	b8 5f       	subi	r27, 0xF8	; 248
 7de:	39 f0       	breq	.+14     	; 0x7ee <__fixunssfsi+0x4c>
 7e0:	b9 3f       	cpi	r27, 0xF9	; 249
 7e2:	cc f3       	brlt	.-14     	; 0x7d6 <__fixunssfsi+0x34>
 7e4:	86 95       	lsr	r24
 7e6:	77 95       	ror	r23
 7e8:	67 95       	ror	r22
 7ea:	b3 95       	inc	r27
 7ec:	d9 f7       	brne	.-10     	; 0x7e4 <__fixunssfsi+0x42>
 7ee:	3e f4       	brtc	.+14     	; 0x7fe <__fixunssfsi+0x5c>
 7f0:	90 95       	com	r25
 7f2:	80 95       	com	r24
 7f4:	70 95       	com	r23
 7f6:	61 95       	neg	r22
 7f8:	7f 4f       	sbci	r23, 0xFF	; 255
 7fa:	8f 4f       	sbci	r24, 0xFF	; 255
 7fc:	9f 4f       	sbci	r25, 0xFF	; 255
 7fe:	08 95       	ret

00000800 <__floatunsisf>:
 800:	e8 94       	clt
 802:	09 c0       	rjmp	.+18     	; 0x816 <__floatsisf+0x12>

00000804 <__floatsisf>:
 804:	97 fb       	bst	r25, 7
 806:	3e f4       	brtc	.+14     	; 0x816 <__floatsisf+0x12>
 808:	90 95       	com	r25
 80a:	80 95       	com	r24
 80c:	70 95       	com	r23
 80e:	61 95       	neg	r22
 810:	7f 4f       	sbci	r23, 0xFF	; 255
 812:	8f 4f       	sbci	r24, 0xFF	; 255
 814:	9f 4f       	sbci	r25, 0xFF	; 255
 816:	99 23       	and	r25, r25
 818:	a9 f0       	breq	.+42     	; 0x844 <__floatsisf+0x40>
 81a:	f9 2f       	mov	r31, r25
 81c:	96 e9       	ldi	r25, 0x96	; 150
 81e:	bb 27       	eor	r27, r27
 820:	93 95       	inc	r25
 822:	f6 95       	lsr	r31
 824:	87 95       	ror	r24
 826:	77 95       	ror	r23
 828:	67 95       	ror	r22
 82a:	b7 95       	ror	r27
 82c:	f1 11       	cpse	r31, r1
 82e:	f8 cf       	rjmp	.-16     	; 0x820 <__floatsisf+0x1c>
 830:	fa f4       	brpl	.+62     	; 0x870 <__floatsisf+0x6c>
 832:	bb 0f       	add	r27, r27
 834:	11 f4       	brne	.+4      	; 0x83a <__floatsisf+0x36>
 836:	60 ff       	sbrs	r22, 0
 838:	1b c0       	rjmp	.+54     	; 0x870 <__floatsisf+0x6c>
 83a:	6f 5f       	subi	r22, 0xFF	; 255
 83c:	7f 4f       	sbci	r23, 0xFF	; 255
 83e:	8f 4f       	sbci	r24, 0xFF	; 255
 840:	9f 4f       	sbci	r25, 0xFF	; 255
 842:	16 c0       	rjmp	.+44     	; 0x870 <__floatsisf+0x6c>
 844:	88 23       	and	r24, r24
 846:	11 f0       	breq	.+4      	; 0x84c <__floatsisf+0x48>
 848:	96 e9       	ldi	r25, 0x96	; 150
 84a:	11 c0       	rjmp	.+34     	; 0x86e <__floatsisf+0x6a>
 84c:	77 23       	and	r23, r23
 84e:	21 f0       	breq	.+8      	; 0x858 <__floatsisf+0x54>
 850:	9e e8       	ldi	r25, 0x8E	; 142
 852:	87 2f       	mov	r24, r23
 854:	76 2f       	mov	r23, r22
 856:	05 c0       	rjmp	.+10     	; 0x862 <__floatsisf+0x5e>
 858:	66 23       	and	r22, r22
 85a:	71 f0       	breq	.+28     	; 0x878 <__floatsisf+0x74>
 85c:	96 e8       	ldi	r25, 0x86	; 134
 85e:	86 2f       	mov	r24, r22
 860:	70 e0       	ldi	r23, 0x00	; 0
 862:	60 e0       	ldi	r22, 0x00	; 0
 864:	2a f0       	brmi	.+10     	; 0x870 <__floatsisf+0x6c>
 866:	9a 95       	dec	r25
 868:	66 0f       	add	r22, r22
 86a:	77 1f       	adc	r23, r23
 86c:	88 1f       	adc	r24, r24
 86e:	da f7       	brpl	.-10     	; 0x866 <__floatsisf+0x62>
 870:	88 0f       	add	r24, r24
 872:	96 95       	lsr	r25
 874:	87 95       	ror	r24
 876:	97 f9       	bld	r25, 7
 878:	08 95       	ret

0000087a <__fp_cmp>:
 87a:	99 0f       	add	r25, r25
 87c:	00 08       	sbc	r0, r0
 87e:	55 0f       	add	r21, r21
 880:	aa 0b       	sbc	r26, r26
 882:	e0 e8       	ldi	r30, 0x80	; 128
 884:	fe ef       	ldi	r31, 0xFE	; 254
 886:	16 16       	cp	r1, r22
 888:	17 06       	cpc	r1, r23
 88a:	e8 07       	cpc	r30, r24
 88c:	f9 07       	cpc	r31, r25
 88e:	c0 f0       	brcs	.+48     	; 0x8c0 <__fp_cmp+0x46>
 890:	12 16       	cp	r1, r18
 892:	13 06       	cpc	r1, r19
 894:	e4 07       	cpc	r30, r20
 896:	f5 07       	cpc	r31, r21
 898:	98 f0       	brcs	.+38     	; 0x8c0 <__fp_cmp+0x46>
 89a:	62 1b       	sub	r22, r18
 89c:	73 0b       	sbc	r23, r19
 89e:	84 0b       	sbc	r24, r20
 8a0:	95 0b       	sbc	r25, r21
 8a2:	39 f4       	brne	.+14     	; 0x8b2 <__fp_cmp+0x38>
 8a4:	0a 26       	eor	r0, r26
 8a6:	61 f0       	breq	.+24     	; 0x8c0 <__fp_cmp+0x46>
 8a8:	23 2b       	or	r18, r19
 8aa:	24 2b       	or	r18, r20
 8ac:	25 2b       	or	r18, r21
 8ae:	21 f4       	brne	.+8      	; 0x8b8 <__fp_cmp+0x3e>
 8b0:	08 95       	ret
 8b2:	0a 26       	eor	r0, r26
 8b4:	09 f4       	brne	.+2      	; 0x8b8 <__fp_cmp+0x3e>
 8b6:	a1 40       	sbci	r26, 0x01	; 1
 8b8:	a6 95       	lsr	r26
 8ba:	8f ef       	ldi	r24, 0xFF	; 255
 8bc:	81 1d       	adc	r24, r1
 8be:	81 1d       	adc	r24, r1
 8c0:	08 95       	ret

000008c2 <__fp_inf>:
 8c2:	97 f9       	bld	r25, 7
 8c4:	9f 67       	ori	r25, 0x7F	; 127
 8c6:	80 e8       	ldi	r24, 0x80	; 128
 8c8:	70 e0       	ldi	r23, 0x00	; 0
 8ca:	60 e0       	ldi	r22, 0x00	; 0
 8cc:	08 95       	ret

000008ce <__fp_nan>:
 8ce:	9f ef       	ldi	r25, 0xFF	; 255
 8d0:	80 ec       	ldi	r24, 0xC0	; 192
 8d2:	08 95       	ret

000008d4 <__fp_pscA>:
 8d4:	00 24       	eor	r0, r0
 8d6:	0a 94       	dec	r0
 8d8:	16 16       	cp	r1, r22
 8da:	17 06       	cpc	r1, r23
 8dc:	18 06       	cpc	r1, r24
 8de:	09 06       	cpc	r0, r25
 8e0:	08 95       	ret

000008e2 <__fp_pscB>:
 8e2:	00 24       	eor	r0, r0
 8e4:	0a 94       	dec	r0
 8e6:	12 16       	cp	r1, r18
 8e8:	13 06       	cpc	r1, r19
 8ea:	14 06       	cpc	r1, r20
 8ec:	05 06       	cpc	r0, r21
 8ee:	08 95       	ret

000008f0 <__fp_round>:
 8f0:	09 2e       	mov	r0, r25
 8f2:	03 94       	inc	r0
 8f4:	00 0c       	add	r0, r0
 8f6:	11 f4       	brne	.+4      	; 0x8fc <__fp_round+0xc>
 8f8:	88 23       	and	r24, r24
 8fa:	52 f0       	brmi	.+20     	; 0x910 <__stack+0x11>
 8fc:	bb 0f       	add	r27, r27
 8fe:	40 f4       	brcc	.+16     	; 0x910 <__stack+0x11>
 900:	bf 2b       	or	r27, r31
 902:	11 f4       	brne	.+4      	; 0x908 <__stack+0x9>
 904:	60 ff       	sbrs	r22, 0
 906:	04 c0       	rjmp	.+8      	; 0x910 <__stack+0x11>
 908:	6f 5f       	subi	r22, 0xFF	; 255
 90a:	7f 4f       	sbci	r23, 0xFF	; 255
 90c:	8f 4f       	sbci	r24, 0xFF	; 255
 90e:	9f 4f       	sbci	r25, 0xFF	; 255
 910:	08 95       	ret

00000912 <__fp_split3>:
 912:	57 fd       	sbrc	r21, 7
 914:	90 58       	subi	r25, 0x80	; 128
 916:	44 0f       	add	r20, r20
 918:	55 1f       	adc	r21, r21
 91a:	59 f0       	breq	.+22     	; 0x932 <__fp_splitA+0x10>
 91c:	5f 3f       	cpi	r21, 0xFF	; 255
 91e:	71 f0       	breq	.+28     	; 0x93c <__fp_splitA+0x1a>
 920:	47 95       	ror	r20

00000922 <__fp_splitA>:
 922:	88 0f       	add	r24, r24
 924:	97 fb       	bst	r25, 7
 926:	99 1f       	adc	r25, r25
 928:	61 f0       	breq	.+24     	; 0x942 <__fp_splitA+0x20>
 92a:	9f 3f       	cpi	r25, 0xFF	; 255
 92c:	79 f0       	breq	.+30     	; 0x94c <__fp_splitA+0x2a>
 92e:	87 95       	ror	r24
 930:	08 95       	ret
 932:	12 16       	cp	r1, r18
 934:	13 06       	cpc	r1, r19
 936:	14 06       	cpc	r1, r20
 938:	55 1f       	adc	r21, r21
 93a:	f2 cf       	rjmp	.-28     	; 0x920 <__fp_split3+0xe>
 93c:	46 95       	lsr	r20
 93e:	f1 df       	rcall	.-30     	; 0x922 <__fp_splitA>
 940:	08 c0       	rjmp	.+16     	; 0x952 <__fp_splitA+0x30>
 942:	16 16       	cp	r1, r22
 944:	17 06       	cpc	r1, r23
 946:	18 06       	cpc	r1, r24
 948:	99 1f       	adc	r25, r25
 94a:	f1 cf       	rjmp	.-30     	; 0x92e <__fp_splitA+0xc>
 94c:	86 95       	lsr	r24
 94e:	71 05       	cpc	r23, r1
 950:	61 05       	cpc	r22, r1
 952:	08 94       	sec
 954:	08 95       	ret

00000956 <__fp_zero>:
 956:	e8 94       	clt

00000958 <__fp_szero>:
 958:	bb 27       	eor	r27, r27
 95a:	66 27       	eor	r22, r22
 95c:	77 27       	eor	r23, r23
 95e:	cb 01       	movw	r24, r22
 960:	97 f9       	bld	r25, 7
 962:	08 95       	ret

00000964 <__mulsf3>:
 964:	0e 94 c5 04 	call	0x98a	; 0x98a <__mulsf3x>
 968:	0c 94 78 04 	jmp	0x8f0	; 0x8f0 <__fp_round>
 96c:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <__fp_pscA>
 970:	38 f0       	brcs	.+14     	; 0x980 <__mulsf3+0x1c>
 972:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__fp_pscB>
 976:	20 f0       	brcs	.+8      	; 0x980 <__mulsf3+0x1c>
 978:	95 23       	and	r25, r21
 97a:	11 f0       	breq	.+4      	; 0x980 <__mulsf3+0x1c>
 97c:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__fp_inf>
 980:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <__fp_nan>
 984:	11 24       	eor	r1, r1
 986:	0c 94 ac 04 	jmp	0x958	; 0x958 <__fp_szero>

0000098a <__mulsf3x>:
 98a:	0e 94 89 04 	call	0x912	; 0x912 <__fp_split3>
 98e:	70 f3       	brcs	.-36     	; 0x96c <__mulsf3+0x8>

00000990 <__mulsf3_pse>:
 990:	95 9f       	mul	r25, r21
 992:	c1 f3       	breq	.-16     	; 0x984 <__mulsf3+0x20>
 994:	95 0f       	add	r25, r21
 996:	50 e0       	ldi	r21, 0x00	; 0
 998:	55 1f       	adc	r21, r21
 99a:	62 9f       	mul	r22, r18
 99c:	f0 01       	movw	r30, r0
 99e:	72 9f       	mul	r23, r18
 9a0:	bb 27       	eor	r27, r27
 9a2:	f0 0d       	add	r31, r0
 9a4:	b1 1d       	adc	r27, r1
 9a6:	63 9f       	mul	r22, r19
 9a8:	aa 27       	eor	r26, r26
 9aa:	f0 0d       	add	r31, r0
 9ac:	b1 1d       	adc	r27, r1
 9ae:	aa 1f       	adc	r26, r26
 9b0:	64 9f       	mul	r22, r20
 9b2:	66 27       	eor	r22, r22
 9b4:	b0 0d       	add	r27, r0
 9b6:	a1 1d       	adc	r26, r1
 9b8:	66 1f       	adc	r22, r22
 9ba:	82 9f       	mul	r24, r18
 9bc:	22 27       	eor	r18, r18
 9be:	b0 0d       	add	r27, r0
 9c0:	a1 1d       	adc	r26, r1
 9c2:	62 1f       	adc	r22, r18
 9c4:	73 9f       	mul	r23, r19
 9c6:	b0 0d       	add	r27, r0
 9c8:	a1 1d       	adc	r26, r1
 9ca:	62 1f       	adc	r22, r18
 9cc:	83 9f       	mul	r24, r19
 9ce:	a0 0d       	add	r26, r0
 9d0:	61 1d       	adc	r22, r1
 9d2:	22 1f       	adc	r18, r18
 9d4:	74 9f       	mul	r23, r20
 9d6:	33 27       	eor	r19, r19
 9d8:	a0 0d       	add	r26, r0
 9da:	61 1d       	adc	r22, r1
 9dc:	23 1f       	adc	r18, r19
 9de:	84 9f       	mul	r24, r20
 9e0:	60 0d       	add	r22, r0
 9e2:	21 1d       	adc	r18, r1
 9e4:	82 2f       	mov	r24, r18
 9e6:	76 2f       	mov	r23, r22
 9e8:	6a 2f       	mov	r22, r26
 9ea:	11 24       	eor	r1, r1
 9ec:	9f 57       	subi	r25, 0x7F	; 127
 9ee:	50 40       	sbci	r21, 0x00	; 0
 9f0:	9a f0       	brmi	.+38     	; 0xa18 <__mulsf3_pse+0x88>
 9f2:	f1 f0       	breq	.+60     	; 0xa30 <__mulsf3_pse+0xa0>
 9f4:	88 23       	and	r24, r24
 9f6:	4a f0       	brmi	.+18     	; 0xa0a <__mulsf3_pse+0x7a>
 9f8:	ee 0f       	add	r30, r30
 9fa:	ff 1f       	adc	r31, r31
 9fc:	bb 1f       	adc	r27, r27
 9fe:	66 1f       	adc	r22, r22
 a00:	77 1f       	adc	r23, r23
 a02:	88 1f       	adc	r24, r24
 a04:	91 50       	subi	r25, 0x01	; 1
 a06:	50 40       	sbci	r21, 0x00	; 0
 a08:	a9 f7       	brne	.-22     	; 0x9f4 <__mulsf3_pse+0x64>
 a0a:	9e 3f       	cpi	r25, 0xFE	; 254
 a0c:	51 05       	cpc	r21, r1
 a0e:	80 f0       	brcs	.+32     	; 0xa30 <__mulsf3_pse+0xa0>
 a10:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__fp_inf>
 a14:	0c 94 ac 04 	jmp	0x958	; 0x958 <__fp_szero>
 a18:	5f 3f       	cpi	r21, 0xFF	; 255
 a1a:	e4 f3       	brlt	.-8      	; 0xa14 <__mulsf3_pse+0x84>
 a1c:	98 3e       	cpi	r25, 0xE8	; 232
 a1e:	d4 f3       	brlt	.-12     	; 0xa14 <__mulsf3_pse+0x84>
 a20:	86 95       	lsr	r24
 a22:	77 95       	ror	r23
 a24:	67 95       	ror	r22
 a26:	b7 95       	ror	r27
 a28:	f7 95       	ror	r31
 a2a:	e7 95       	ror	r30
 a2c:	9f 5f       	subi	r25, 0xFF	; 255
 a2e:	c1 f7       	brne	.-16     	; 0xa20 <__mulsf3_pse+0x90>
 a30:	fe 2b       	or	r31, r30
 a32:	88 0f       	add	r24, r24
 a34:	91 1d       	adc	r25, r1
 a36:	96 95       	lsr	r25
 a38:	87 95       	ror	r24
 a3a:	97 f9       	bld	r25, 7
 a3c:	08 95       	ret

00000a3e <strcat>:
 a3e:	fb 01       	movw	r30, r22
 a40:	dc 01       	movw	r26, r24
 a42:	0d 90       	ld	r0, X+
 a44:	00 20       	and	r0, r0
 a46:	e9 f7       	brne	.-6      	; 0xa42 <strcat+0x4>
 a48:	11 97       	sbiw	r26, 0x01	; 1
 a4a:	01 90       	ld	r0, Z+
 a4c:	0d 92       	st	X+, r0
 a4e:	00 20       	and	r0, r0
 a50:	e1 f7       	brne	.-8      	; 0xa4a <strcat+0xc>
 a52:	08 95       	ret

00000a54 <__itoa_ncheck>:
 a54:	bb 27       	eor	r27, r27
 a56:	4a 30       	cpi	r20, 0x0A	; 10
 a58:	31 f4       	brne	.+12     	; 0xa66 <__itoa_ncheck+0x12>
 a5a:	99 23       	and	r25, r25
 a5c:	22 f4       	brpl	.+8      	; 0xa66 <__itoa_ncheck+0x12>
 a5e:	bd e2       	ldi	r27, 0x2D	; 45
 a60:	90 95       	com	r25
 a62:	81 95       	neg	r24
 a64:	9f 4f       	sbci	r25, 0xFF	; 255
 a66:	0c 94 36 05 	jmp	0xa6c	; 0xa6c <__utoa_common>

00000a6a <__utoa_ncheck>:
 a6a:	bb 27       	eor	r27, r27

00000a6c <__utoa_common>:
 a6c:	fb 01       	movw	r30, r22
 a6e:	55 27       	eor	r21, r21
 a70:	aa 27       	eor	r26, r26
 a72:	88 0f       	add	r24, r24
 a74:	99 1f       	adc	r25, r25
 a76:	aa 1f       	adc	r26, r26
 a78:	a4 17       	cp	r26, r20
 a7a:	10 f0       	brcs	.+4      	; 0xa80 <__utoa_common+0x14>
 a7c:	a4 1b       	sub	r26, r20
 a7e:	83 95       	inc	r24
 a80:	50 51       	subi	r21, 0x10	; 16
 a82:	b9 f7       	brne	.-18     	; 0xa72 <__utoa_common+0x6>
 a84:	a0 5d       	subi	r26, 0xD0	; 208
 a86:	aa 33       	cpi	r26, 0x3A	; 58
 a88:	08 f0       	brcs	.+2      	; 0xa8c <__utoa_common+0x20>
 a8a:	a9 5d       	subi	r26, 0xD9	; 217
 a8c:	a1 93       	st	Z+, r26
 a8e:	00 97       	sbiw	r24, 0x00	; 0
 a90:	79 f7       	brne	.-34     	; 0xa70 <__utoa_common+0x4>
 a92:	b1 11       	cpse	r27, r1
 a94:	b1 93       	st	Z+, r27
 a96:	11 92       	st	Z+, r1
 a98:	cb 01       	movw	r24, r22
 a9a:	0c 94 4f 05 	jmp	0xa9e	; 0xa9e <strrev>

00000a9e <strrev>:
 a9e:	dc 01       	movw	r26, r24
 aa0:	fc 01       	movw	r30, r24
 aa2:	67 2f       	mov	r22, r23
 aa4:	71 91       	ld	r23, Z+
 aa6:	77 23       	and	r23, r23
 aa8:	e1 f7       	brne	.-8      	; 0xaa2 <strrev+0x4>
 aaa:	32 97       	sbiw	r30, 0x02	; 2
 aac:	04 c0       	rjmp	.+8      	; 0xab6 <strrev+0x18>
 aae:	7c 91       	ld	r23, X
 ab0:	6d 93       	st	X+, r22
 ab2:	70 83       	st	Z, r23
 ab4:	62 91       	ld	r22, -Z
 ab6:	ae 17       	cp	r26, r30
 ab8:	bf 07       	cpc	r27, r31
 aba:	c8 f3       	brcs	.-14     	; 0xaae <strrev+0x10>
 abc:	08 95       	ret

00000abe <_exit>:
 abe:	f8 94       	cli

00000ac0 <__stop_program>:
 ac0:	ff cf       	rjmp	.-2      	; 0xac0 <__stop_program>
